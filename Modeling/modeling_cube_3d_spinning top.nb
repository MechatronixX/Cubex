(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    245617,       5134]
NotebookOptionsPosition[    238197,       4891]
NotebookOutlinePosition[    238541,       4906]
CellTagsIndexPosition[    238498,       4903]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.697011164288345*^9, 3.6970111670035114`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Modeling of Cubex in 3D - Spinning top version 
\
\>", "Title",
 CellChangeTimes->{{3.69701118269042*^9, 3.697011187845723*^9}, {
  3.697022782087907*^9, 3.6970228176715946`*^9}, {3.6971150410591044`*^9, 
  3.6971150414821296`*^9}, {3.7003937887334194`*^9, 3.7003937984408345`*^9}, {
  3.7003938377055206`*^9, 3.70039384630289*^9}, {3.7003938880776787`*^9, 
  3.700393889633748*^9}, {3.7003939327536006`*^9, 3.7003939335876365`*^9}, {
  3.702813931211417*^9, 3.702813934689195*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
wTEAQOIgAgAAwAUAAImDCAAAAMCQ/w/ZKSs8
    "], {{0, 482}, {515, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{515, 482},
  PlotRange->{{0, 515}, {0, 482}}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
wTEAQOIgAgAAwAUAAImDCAAAAMCQ/w/ZKSs8
    "], {{0, 482}, {515, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{515, 482},
  PlotRange->{{0, 515}, {0, 482}}]], "Output",
 CellChangeTimes->{3.7028148634485626`*^9}]
}, Open  ]],

Cell["\<\


It\[CloseCurlyQuote]s a spinning top approach to model the cube. The wheel \
inertia are left out. 

\
\>", "Text",
 CellChangeTimes->{{3.700393904298379*^9, 3.7003939314945407`*^9}, {
   3.700393964396955*^9, 3.70039396455896*^9}, {3.7004683309231195`*^9, 
   3.700468343203885*^9}, 3.702813939147118*^9, {3.7028139813128247`*^9, 
   3.702814012559314*^9}}],

Cell[CellGroupData[{

Cell["Coordinates and conventions ", "Section",
 CellChangeTimes->{{3.7003940204693546`*^9, 3.7003940562938952`*^9}, {
  3.700462956474331*^9, 3.700462961062484*^9}}],

Cell["\<\

Using a body fixed coordinate system attached to the center of the cube, \
which is assumed to also be the principal axis frame. From the origins of \
this frame are vectors (rw1, rw2,rw2) going to the centerpoints of the \
wheels. From the corner of the wheel there is a vector r_cb going to the \
origin of the coordinate system. 



As of what it seems, the easiest way to get go the spining top frame b2 from \
b1 is to rotate b1 (-45 degrees) around its y- axis and then a = arccos( 1 / \
\[Sqrt]3) = -55 degrees around the \tX axis (See figure, l = sqrt(3) r ) 





\
\>", "Text",
 CellChangeTimes->{{3.700394040407213*^9, 3.700394337496956*^9}, {
   3.7004005857946463`*^9, 3.7004006219471955`*^9}, {3.700400662139927*^9, 
   3.7004006864569674`*^9}, {3.7004007530288153`*^9, 3.70040076965553*^9}, {
   3.7004548905059495`*^9, 3.700454895071081*^9}, {3.700459591610805*^9, 
   3.700459601261126*^9}, {3.700462767384036*^9, 3.7004627767873526`*^9}, {
   3.7004629770030155`*^9, 3.700463104403255*^9}, 3.7004631350902767`*^9, {
   3.7004634564839706`*^9, 3.7004634576580095`*^9}, {3.700468221969941*^9, 
   3.7004682419204483`*^9}, {3.702814027891433*^9, 3.702814045805238*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.70046346001709*^9, 3.7004636992496424`*^9}, {
   3.7004637300546722`*^9, 3.7004638123194065`*^9}, {3.700463966744546*^9, 
   3.700463971884716*^9}, {3.7004640918797145`*^9, 3.7004641993932905`*^9}, 
   3.7004681061748686`*^9, 3.7004683062823386`*^9, 3.702814046714841*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rotation from actuator frame ", "Section",
 CellChangeTimes->{{3.7004549736375456`*^9, 3.7004549890572896`*^9}, 
   3.700468356404146*^9}],

Cell["\<\
The actuator frame is defines so that the each wheel revolves around one \
axis.  This body frame is defines such that the Z-axis goes through one \
corner, the center of the cube, and the adjacent corner. \
\>", "Text",
 CellChangeTimes->{{3.7004549983933487`*^9, 3.700455020258483*^9}, {
  3.700455178163807*^9, 3.700455225280157*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7004549902180223`*^9, 3.700454990668083*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", " ", "=", " ", 
    RowBox[{"ArcCos", "[", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", "3", "]"}]}], "]"}]}], " ", ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "For", " ", "express", " ", "a", " ", "vector", " ", "in", " ", "body", 
     " ", "frame"}], " ", "->", " ", 
    RowBox[{"actuator", " ", "frame"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Rba", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"RotationMatrix", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "Pi"}], "/", "4"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}]}], "]"}], ".", 
      RowBox[{"RotationMatrix", "[", " ", 
       RowBox[{
        RowBox[{"-", "a"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], " ", "//", 
     "Simplify"}]}], ";"}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Express", " ", "a", " ", "vector", " ", "in", " ", "acuator", " ", 
     RowBox[{"frame", " ", "--"}]}], ">", " ", "bodyframe"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Rab", " ", "=", 
    RowBox[{
     RowBox[{"RotationMatrix", "[", " ", 
      RowBox[{"a", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], ".", 
     RowBox[{"RotationMatrix", "[", 
      RowBox[{
       RowBox[{"Pi", "/", "4"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}]}], "]"}]}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Rab", " ", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rab", " ", "//", "MatrixForm"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Should", " ", "be", " ", "an", " ", "identity", " ", "matrix", " ", "if", 
    " ", "we", " ", "did", " ", "right"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rab", ".", "Rba"}], " ", "//", "MatrixForm"}]}], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", 
       SqrtBox["2"]], 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}], "0"},
     {
      FractionBox["1", 
       SqrtBox["6"]], 
      FractionBox["1", 
       SqrtBox["6"]], 
      RowBox[{"-", 
       SqrtBox[
        FractionBox["2", "3"]]}]},
     {
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["1", 
       SqrtBox["3"]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.700999536423883*^9, 3.7028148636874833`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", 
       SqrtBox["2"]], 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}], "0"},
     {
      FractionBox["1", 
       SqrtBox["6"]], 
      FractionBox["1", 
       SqrtBox["6"]], 
      RowBox[{"-", 
       SqrtBox[
        FractionBox["2", "3"]]}]},
     {
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["1", 
       SqrtBox["3"]], 
      FractionBox["1", 
       SqrtBox["3"]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.700999536423883*^9, 3.7028148637174854`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0"},
     {"0", "1", "0"},
     {"0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.700999536423883*^9, 3.702814863737486*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

Rotational energy \
\>", "Section",
 CellChangeTimes->{{3.6970168233537183`*^9, 3.6970168254804144`*^9}, 
   3.697019061395855*^9, {3.6970193387658997`*^9, 3.697019343598442*^9}, 
   3.697022766683091*^9, {3.7003938849975495`*^9, 3.700393885272559*^9}, 
   3.7004549187076445`*^9, {3.700468287711735*^9, 3.7004682880819993`*^9}, 
   3.700468359994155*^9}],

Cell[CellGroupData[{

Cell["Cube ", "Subsection",
 CellChangeTimes->{{3.697019068908176*^9, 3.6970190703215103`*^9}, 
   3.697019105097057*^9}],

Cell["\<\
Rotation of the cube frame itself. Its assumed that the cube is perfectly \
symmetrical, and that we have a body frame aligned with the principal axis.  \
\>", "Text",
 CellChangeTimes->{{3.6970190964401255`*^9, 3.6970191030031834`*^9}, {
  3.6970191577173185`*^9, 3.697019174374089*^9}, {3.6970228382876477`*^9, 
  3.697022856685115*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalOmega]c", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Omega]x", "[", "t", "]"}], ",", " ", 
       RowBox[{"\[Omega]y", "[", "t", "]"}], ",", 
       RowBox[{"\[Omega]z", "[", "t", "]"}]}], "}"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Describes", " ", "rotation", " ", "of", " ", "cube", " ", "as", " ", 
      "a", " ", "whole"}], ",", " ", 
     RowBox[{
     "vector", " ", "expressed", " ", "in", " ", "the", " ", "body", " ", 
      "frame"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Vector", " ", "from", " ", "the", " ", "corner", " ", "to", " ", "the", 
     " ", 
     RowBox[{"origin", ".", " ", "45"}], " ", "degrees", " ", "everywhere"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Rcb", " ", "=", " ", 
    RowBox[{"{", " ", 
     RowBox[{"0", ",", "  ", "0", ",", "  ", 
      RowBox[{
       RowBox[{"Sqrt", "[", "3", "]"}], "*", " ", "r"}]}], "  ", "}"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ic", " ", "=", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Ic0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "Ic0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "Ic0"}], "}"}]}], "  ", "}"}]}], " ", 
    ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Inertia", " ", "of", " ", "cube", " ", "in", " ", "the", " ", "body", 
     " ", "frame"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Translation", " ", "velocity", " ", "of", " ", "the", " ", "center", " ",
      "of", " ", "gravity"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Vc", " ", "=", " ", 
     RowBox[{"Cross", "[", 
      RowBox[{"\[CapitalOmega]c", ",", "Rcb"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Tc", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"0.5", "*", 
       RowBox[{"\[CapitalOmega]c", ".", "Ic", ".", "\[CapitalOmega]c"}]}], 
      "  ", "+", " ", 
      RowBox[{"0.5", "*", "mc", "*", 
       RowBox[{"Vc", ".", "Vc"}]}]}], " ", "//", "Simplify"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Ic", " ", "//", "MatrixForm"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Try", " ", "to", " ", "reduce", " ", "equation", " ", "size", " ", "by", 
     " ", "identifying", " ", "inertic", " ", "components"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]1", " ", "=", " ", 
     RowBox[{
      RowBox[{"1.5", "*", "mc", "*", 
       RowBox[{"r", "^", "2"}]}], "+", 
      RowBox[{"0.5", "*", "Ic0"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"\[Lambda]2", " ", "=", " ", 
    RowBox[{"0.5", "*", "Ic0"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Define", " ", "new", " ", 
     RowBox[{"eq", ".", " ", "inertia"}], " ", "parameter"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Ixy", " ", "=", " ", 
    RowBox[{"Ic0", " ", "+", " ", 
     RowBox[{"3", "*", "mc", "*", 
      RowBox[{"r", "^", "2"}]}]}]}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Tc2", " ", "=", " ", 
    RowBox[{
     RowBox[{"Ixy", "*", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"\[Omega]x", "[", "t", "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"\[Omega]y", "[", "t", "]"}], "2"]}], ")"}]}], " ", "+", " ", 
     RowBox[{"Ic0", "*", 
      SuperscriptBox[
       RowBox[{"\[Omega]z", "[", "t", "]"}], "2"]}]}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.6970190725095844`*^9, 3.6970190818884125`*^9}, {
   3.697019113144698*^9, 3.697019268791228*^9}, 3.6970199395480723`*^9, {
   3.697022590898673*^9, 3.6970225931449423`*^9}, {3.6978087935714426`*^9, 
   3.6978088875140944`*^9}, {3.697809013702287*^9, 3.697809157699634*^9}, {
   3.6978092040493135`*^9, 3.697809204378496*^9}, {3.697809249634827*^9, 
   3.6978092849573975`*^9}, {3.6978093257867484`*^9, 3.697809365800346*^9}, {
   3.697809414884755*^9, 3.697809429033495*^9}, {3.6978095225496273`*^9, 
   3.697809550722472*^9}, {3.6978095844601045`*^9, 3.6978095849602947`*^9}, {
   3.6978100281528482`*^9, 3.697810042935587*^9}, {3.6978100787785945`*^9, 
   3.6978100810601063`*^9}, {3.697810352657529*^9, 3.697810406220096*^9}, {
   3.700307271772318*^9, 3.700307295918274*^9}, {3.700307331776781*^9, 
   3.7003073783798904`*^9}, 3.700307740617305*^9, {3.7003083175782833`*^9, 
   3.7003083673796988`*^9}, {3.700468362434366*^9, 3.7004683765046473`*^9}, {
   3.700473107159708*^9, 3.7004731100257716`*^9}, {3.700489855829562*^9, 
   3.7004898564644527`*^9}, {3.7004901035251045`*^9, 
   3.7004901432236147`*^9}, {3.700490235281393*^9, 3.7004903936238813`*^9}, {
   3.7028942258380055`*^9, 3.7028943329178295`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   RowBox[{
    SqrtBox["3"], " ", "r"}]}], "}"}]], "Output",
 CellChangeTimes->{3.700999536483901*^9, 3.702814863776314*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"1.5`", " ", "mc", " ", 
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"\[Omega]x", "[", "t", "]"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"\[Omega]y", "[", "t", "]"}], "2"]}], ")"}]}], "+", 
  RowBox[{"0.5`", " ", "Ic0", " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"\[Omega]x", "[", "t", "]"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"\[Omega]y", "[", "t", "]"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"\[Omega]z", "[", "t", "]"}], "2"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.700999536483901*^9, 3.702814863798772*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"Ic0", "0", "0"},
     {"0", "Ic0", "0"},
     {"0", "0", "Ic0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.700999536483901*^9, 3.702814863808769*^9}],

Cell[BoxData[
 RowBox[{"0.5`", " ", "Ic0"}]], "Output",
 CellChangeTimes->{3.700999536483901*^9, 3.702814863808769*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Euler angles as generalized coordinates", "Section",
 CellChangeTimes->{{3.6970226849064307`*^9, 3.6970226968121142`*^9}, {
  3.7005684785772176`*^9, 3.700568482307206*^9}}],

Cell["\<\
Using Z-X\[CloseCurlyQuote] -Z\[CloseCurlyQuote]\[CloseCurlyQuote] 

\[CloseCurlyQuote]Euler angles as generalzied coordinates. Is done by \
relating the angular velocity of the body, expressed in the body frame, to \
the derivates of the euler angles. 



Above is some overview over the frames used. 

Good references: 

http://physics.stackexchange.com/questions/73961/angular-velocity-expressed-\
via-euler-angles (best)

https://ocw.mit.edu/courses/aeronautics-and-astronautics/16-07-dynamics-fall-\
2009/lecture-notes/MIT16_07F09_Lec29.pdf\[LineSeparator]\
\>", "Text",
 CellChangeTimes->{{3.6970230979189425`*^9, 3.6970231066611233`*^9}, {
   3.6970235018985486`*^9, 3.6970235376564384`*^9}, {3.697807173373186*^9, 
   3.6978072131880865`*^9}, {3.6978075068484187`*^9, 
   3.6978075119265757`*^9}, {3.6979579171310062`*^9, 
   3.6979579236900425`*^9}, {3.700307920619897*^9, 3.700307956392256*^9}, {
   3.7003080171423283`*^9, 3.700308039542556*^9}, {3.7004715050307846`*^9, 
   3.7004715165037913`*^9}, {3.700486432918285*^9, 3.700486433994416*^9}, 
   3.7004899772580633`*^9, {3.702814848058549*^9, 3.702814848216226*^9}, {
   3.7028149000383987`*^9, 3.7028149018077755`*^9}}],

Cell[CellGroupData[{

Cell["Configuration panel ", "Subsubsection",
 CellChangeTimes->{{3.7004880286649904`*^9, 3.7004880325908985`*^9}}],

Cell["\<\
Choose rotation axises here, and what the angles of rotation 1,2 and 3 should \
be called, respectively. Check the figure above!\
\>", "Text",
 CellChangeTimes->{{3.700488040695794*^9, 3.700488087714987*^9}, {
  3.7004882466248584`*^9, 3.700488254956323*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7004880340764737`*^9, 3.7004880353369007`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Euler", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\[Psi]", ",", "\[Theta]", ",", "\[Phi]"}], "}"}]}], ";"}], 
   "*)"}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Define", " ", "euler", " ", "rotation", " ", 
    RowBox[{"axises", ".", " ", "Two"}], " ", "consecutive", " ", "cant", " ",
     "be", " ", "the", " ", "same"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"e1", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"e2", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"e3", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.697023513275732*^9, 3.6970235328245783`*^9}, {
   3.697023706577409*^9, 3.6970237196947308`*^9}, {3.6978070640975604`*^9, 
   3.697807064253944*^9}, {3.6978071042673187`*^9, 3.6978071638261356`*^9}, {
   3.6978072188347454`*^9, 3.6978074942418737`*^9}, {3.6978075288509097`*^9, 
   3.6978077946628227`*^9}, {3.6978078256250396`*^9, 
   3.6978078502766457`*^9}, {3.69780867025316*^9, 3.6978087613190546`*^9}, {
   3.700307628845448*^9, 3.7003077236260624`*^9}, {3.7003090737640157`*^9, 
   3.70030910055422*^9}, {3.700310146475283*^9, 3.7003101492645073`*^9}, {
   3.7003102050418515`*^9, 3.70031020805982*^9}, {3.7004686287779284`*^9, 
   3.7004686329531045`*^9}, {3.700468883339421*^9, 3.700468885885234*^9}, {
   3.700468955233527*^9, 3.7004689585743504`*^9}, {3.700469060856281*^9, 
   3.7004690619120874`*^9}, {3.7004703926669044`*^9, 3.700470396068942*^9}, {
   3.7004711982681694`*^9, 3.700471204311143*^9}, {3.700485141606286*^9, 
   3.700485181371625*^9}, {3.700485212689622*^9, 3.700485295552185*^9}, {
   3.700485434007103*^9, 3.7004855134030895`*^9}, {3.700485611956498*^9, 
   3.700485612020518*^9}, {3.7004857725121756`*^9, 3.7004857803408084`*^9}, {
   3.700486504182706*^9, 3.700486548211136*^9}, {3.70048667979175*^9, 
   3.700486817839339*^9}, {3.7004869137530084`*^9, 3.700486935694216*^9}, {
   3.7004869811827264`*^9, 3.7004869961482863`*^9}, {3.7004870312425137`*^9, 
   3.7004872759617844`*^9}, {3.7004873090752907`*^9, 
   3.7004874440757837`*^9}, {3.700487488974024*^9, 3.7004875906927185`*^9}, {
   3.700487630566186*^9, 3.70048765305684*^9}, {3.700487930483673*^9, 
   3.7004879378073*^9}, {3.7004880142562447`*^9, 3.7004880178811903`*^9}, 
   3.7004881133732824`*^9, {3.700491050942113*^9, 3.7004910541437435`*^9}, {
   3.7004911535136814`*^9, 3.7004911657922535`*^9}, {3.7004912315016904`*^9, 
   3.700491241038392*^9}, {3.7004914322369924`*^9, 3.7004914625383277`*^9}, {
   3.7004940071805077`*^9, 3.700494013279722*^9}, {3.7028148562817373`*^9, 
   3.70281485760655*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Change", " ", "variables", " ", "names", " ", "to", " ", "ones", " ", 
    "commonly", " ", "used", " ", "for", " ", "Euler", " ", 
    RowBox[{"angles", ".", " ", "These"}], " ", "are", " ", "also", " ", 
    "our", " ", "first", " ", "three", " ", "generalized", " ", 
    RowBox[{"coordinates", "!"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"q1", "[", "t", "]"}], " ", "=", " ", 
     RowBox[{"\[Phi]", "[", "t", "]"}]}], ";", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"q2", "[", "t", "]"}], " ", "=", " ", 
     RowBox[{"\[Theta]", "[", "t", "]"}]}], ";", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"q3", "[", "t", "]"}], " ", "=", " ", 
     RowBox[{"\[Psi]", "[", "t", "]"}]}], ";"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.697023513275732*^9, 3.6970235328245783`*^9}, {
   3.697023706577409*^9, 3.6970237196947308`*^9}, {3.6978070640975604`*^9, 
   3.697807064253944*^9}, {3.6978071042673187`*^9, 3.6978071638261356`*^9}, {
   3.6978072188347454`*^9, 3.6978074942418737`*^9}, {3.6978075288509097`*^9, 
   3.6978077946628227`*^9}, {3.6978078256250396`*^9, 
   3.6978078502766457`*^9}, {3.69780867025316*^9, 3.6978087613190546`*^9}, {
   3.700307628845448*^9, 3.7003077236260624`*^9}, {3.7003090737640157`*^9, 
   3.70030910055422*^9}, {3.700310146475283*^9, 3.7003101492645073`*^9}, {
   3.7003102050418515`*^9, 3.70031020805982*^9}, {3.7004686287779284`*^9, 
   3.7004686329531045`*^9}, {3.700468883339421*^9, 3.700468885885234*^9}, {
   3.700468955233527*^9, 3.7004689585743504`*^9}, {3.700469060856281*^9, 
   3.7004690619120874`*^9}, {3.7004703926669044`*^9, 3.700470396068942*^9}, {
   3.7004711982681694`*^9, 3.700471204311143*^9}, {3.700485141606286*^9, 
   3.700485181371625*^9}, {3.700485212689622*^9, 3.700485295552185*^9}, {
   3.700485434007103*^9, 3.7004855134030895`*^9}, {3.700485611956498*^9, 
   3.700485612020518*^9}, {3.7004857725121756`*^9, 3.7004857803408084`*^9}, {
   3.700486504182706*^9, 3.700486548211136*^9}, {3.70048667979175*^9, 
   3.700486817839339*^9}, {3.7004869137530084`*^9, 3.700486935694216*^9}, {
   3.7004869811827264`*^9, 3.7004869961482863`*^9}, {3.7004870312425137`*^9, 
   3.7004872759617844`*^9}, {3.7004873090752907`*^9, 
   3.7004874440757837`*^9}, {3.700487488974024*^9, 3.7004875906927185`*^9}, {
   3.700487630566186*^9, 3.70048765305684*^9}, {3.700487930483673*^9, 
   3.7004879378073*^9}, {3.7004880142562447`*^9, 3.7004880178811903`*^9}, 
   3.7004881133732824`*^9, {3.700491050942113*^9, 3.7004910541437435`*^9}, {
   3.7004911535136814`*^9, 3.7004911657922535`*^9}, {3.7004912315016904`*^9, 
   3.700491241038392*^9}, {3.7004914322369924`*^9, 3.700491454757476*^9}, {
   3.7004915102234197`*^9, 3.700491515094777*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Intermediate steps\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
i3Xr1oWEhCCDII8MGjTIx8cH/+UmGOfk5Mg7wdg+wu9CtHnrrbf0tqulbaA2
3377bW0wj0E9fPiQXdEtKipC/s3Kytq3b9/69euXLFkybdq0kSNH9u3b9/PP
Px83bhzGO2i62dnZ5eXlIidUXYe1sw20pR07dvzwww9xcXH79+9PTk7OzMxE
KLh16xb/GSi6VmNFoZFjIImQy/5rC+ZB3SFL/uEPf8DoVXXXhEmc0PWqqqrY
zVCMO5Cvvby8OnToUFpaasrh2o5dTIhgp0+f3r59O3KEn58ffwVjbEHuQAZR
5gRj+4gxj/BNPWppGzdu3HBxceGem3MQsfti6OYXLlzIzc3F6HXnzp1RUVHz
58/39/cfPnx4r169Bg8ePHXq1FWrVqWkpPz444/cfCeFd1gZbSCQosSefvrp
L774AiXGVq0hsLGDgJF37tzh3gVsI+ZBpwgNDa2pqbH6yUn21C+//HLz5k2E
PkBsREREUFBQp06dkNlNOVZjscvoBGP+CsbIF8qfYGwHqZ15kKc+//xzs14Y
qkn95z//QTCvqKgoLi5Gvs7Ozk5LS0tMTFy5cuXMmTN9fX09PDx69OgB2p84
cWJcXFx6errFL+JRS9swy0ZGRkajRo3atGmDwaNDjXqUIDDP3bt3T5w4wf5r
C+ZBXvh//+//oc0r+WEHkinCMAStBYEOkIzeumzZMk9Pz48++siUdXtUHbvK
ysqOHz++cePGBQsWjB49+uOPP+7fv/+YMWNmzJjBTTBG5OcmGCMj0CVNoYh5
NKxff/0VwQE9paio6OzZs1lZWXv37o2Ojl68ePF3330H/nFzc8P4aPz48UuW
LNm2bVtOTo4pj/yrpW2YboO99czJyam2tlb6OUnmCsR+7949YCe7LWsL5una
tStGvmgzVMVqF1uu5/r16wUFBYcOHYqNjR07dqyLiwuimdFj1RK72LpVu3fv
XrFixeTJkx1ngrEdRMzjaEK4uHXrFsqN3RfLzMxMSkqKjIycN2/exIkThw0b
9umnnw4ZMgRQtGbNGjASdsMh/DOopW2YaCMkJIQBj/jrCUi2E3sMubCwsKKi
Qmcb5vnDH/6AFAn+t//KpSTrCoSMSqysrESDASfHx8dPnz4dTPvKK68YPVbh
sQsdAYPTRYsWTZgwAUPRmTNnOtoEYzuImIdUV1dXU1ODIXZxcfG5c+eys7Mx
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
j3nkfR6fJF3EPPZUZWXlJ598MnHiRJRzWFgYetO4ceNef/117gkLdYmYx55C
Jx0yZMgLL7wQGxt79OhRNCFXV9e3336bPZ+uUqmaefr27QvmiYqKSkhIYC/p
u3LlCphHvQiqaoF5bty4YfVYSsyjMRHz2FleXl7AHoTK7OxsDElatGiByHnu
3Dm5fVkiYh57Cj7j4+Nbt26N9FpTUxMeHv7yyy+PHTvWnkvdWl3qZR721gY/
Pz8wz4YNGw4cOHD69OmSkhIgKDGPLGJvjk5NTbXuaTnmuXDhAjGPBkTMY2ct
Xbq0S5cu06dPx6ikoKBg4MCBR44cUeACX6aImEdGXbx4ce7cuRkZGXaeMWtd
qZp53N3dR40aFR0dvX79eqTanJyc4uLimzdv2uIFmiSjAo2ASXbt2mXd0xLz
aEzEPHYWIjzrPnIbsYKIeUgSpV7mgfr37+/j4xMTEwPm2b9/f3Z2NpgHaZGu
88gi0AiAE9HVuqcl5tGYhMwzePBgYh6SKSLmIUmUqpln0KBBQ4cOBfMgJ+7Z
s+fkyZMlJSVIi/fv33/8+LH085PM0qNHj8A8Vr/OExoaSsyjJf3888/EPCTL
RMxDkihVM4+Pj4+Xl1dsvXbv3p2VlVVcXFxeXl5bW6uW9ZG0pLq6usrKypSU
FOuelphHYyLmIVksYh6SRKmaeaZNmzZixIi1a9eCeZKTkxFCYezGjRtgHvZm
eZI9BeZBLrP6HGZiHo2JmIdksYh5SBKlauYJDAxkr6mKjo7euXPnsWPHioqK
cObq6mpiHvsLZV5ZWXno0CHrZgSOec6fP0/v29KAiHlIFouYhyRRqmae6dOn
g3mQEKOiopKSko4ePXrp0iWcuaqqSi3vIteSEI5u3bp15MiR2tpaK56WmEdj
EjLPkCFDiHlIpoiYhyRRqmaexYsXe3h4rFq1KjIyEsEzMzPz4sWLZWVl9+7d
ozcU2F8IR8hl2dnZxDwkERHzkCwWMQ9JolTNPNHR0YMGDQL5REREbNu27ejR
o/gt169fB/PQrA/76/Hjx8hlp0+ftu7r54h5NCZiHpLFIuYhSZTamcfDw+P7
778H82zdujUzM/PcuXPXrl27e/cuMY8sQl/Oz8+/efOmFc9JzKMxEfOQLBYx
D0miVM08MTExgwYNWrJkSWRk5JYtW9LT0wsKCkpLS9GiVL04tnoF2gR2EvOQ
RETMQ7JYxDwkiVI182zbtm3w4MGzZ8+OiIjYvHnzkSNH8vPzwTyIqHSdRxZV
V1eDTIh5SCIi5iFZLGIekkSpmnnS0tIQLb/77rvIyMhNmzYdPHgwLy8PjQoR
la7zyCIwz8WLF4uLi614TmIejYnPPImJiWAeT09PYh6SKSLmIUmU2pln6NCh
06ZNA/Ns3LjxwIEDZ86cuXLlyq1btygzyqKamhrkspKSEiueU495kDGteHKS
/UXMQ7JYxDwkiVI783h5eQUFBUVFRW3YsCE1NfX06dNIuJWVlfSaUVmEXIDy
z8/Pt+I5iXk0JmIeksUi5iFJlKqZB4QzYsSIiRMngnni4+P37duXk5ODnHvz
5s379+9LPz/JXCEXlJaWnj171ornJObRmIh5SBaLmIckUWpnnq+++mr06NEx
MTHr169HWgTzFBcXg3lqa2vp1er2F4r92rVr1r3OExwczH/fFjGP2sVnni1b
thDzkEwXMQ9JolTNPLDh7e09ZswYME9cXFxKSkp2djZiKTIjMY8sun///vXr
18+dO2fFcxLzaEyowcrKSoPM809RgaXFdzBFubm5Ug4/evRojx49iHnkEmOe
Nm3a6NWLEtqGKTbQfnr16kXMI6MY8wibkLjs0DZMtDFkyJCBAweCeZAWd+/e
ferUqeLi4vLycgQl9A65S9fh9ODBA9As+MTcqhQ5JzGPxiRknhEjRtB1HpIp
ous8JIlS+3WeqVOnImDGxsYCe3bt2sWu84B5ampqiHnsLzAPOjVymRXPScyj
MRHzkCwWMQ9JotTOPIsXL/7yyy9j6pWcnHzy5ElsvHHjRnV1Nd3bsr+Qzq5c
uXL69GkrnpOYR2Mi5iFZLGIekkRpgHn69+8fGxsbHR29c+fOrKysS5cu4eRg
HrrOY389ePAAlZKRkWHFcxLzaEzEPCSLxZjn5Zdf1tuuhLZhio3a2tpu3brd
vn1b4heRLJbamWfp0qUDBw4MDw+PiorasWPH0aNH0SPKysqqqqrw06R/Bcks
1dTUXLx4EbVgxXNyzIOaJebRgIh5SBYLzIMI88EHH+htV0LbMNFG586db926
JfGLSBZL7cyzfv16Dw+PVatWRUREbN++PSMj4/z582Cee/fuEfPYX3fu3MnL
ywOcWPGcxDwaE2oQMV/IPE2bNhU/UAl5jZhHXiGqZ2VlYZyrt10JbcNEG++9
9x4xj4xSO/OkpKQMGjRo6dKlYJ5t27alp6fj51y/fv3u3bv0mlE7CwVeXl6e
lpZWU1NjxdOuWbNm7dq1jHlwfmIetYvPPOwdo8Q8JBOFIINx7owZM/S2K6Ft
mGijT58+CGU09UIuaYB5Bg8ejLAZGRmJMeORI0cKCgquXbsG5qHXjNpZ1dXV
6MuoEeuelphHYzLIPF26dCHmIRnVgwcPfH19Eef1tiuhbZhoY/78+UhVFMfk
ktqZB6lw2LBhy5YtA/MkJiampaWBeUpLS+/cuUPMY09h/IU6zc/Pt+5kHh2P
eS5evEjMowHx12Em5iGZpXv37nXo0EH4CmkltA0TbWRlZX377bcYlUv8LpJl
UjvznDx5cvjw4SBnMM/mzZsPHTqEtIu4hKBKr1a3m+rq6lDgly5dQgoDc1r3
5MQ8GpMe82DAQsxDMkWPHj1KSkoaPXq08CMltA0TbeBXfPLJJ4WFhXR7Sxap
nXmKiorYq9XBPJs2bTp48CBjnlu3blFytI/QhTH4Kikpyc7OzszMlN429ETM
ozEZZJ7OnTsT85DEVV1d/emnn54/f174kRLahuk2li9fvnjxYvwciV9HskAa
YB4EzBkzZkRFRSUkJKSmpp49e/bKlStgngcPHkj/CpK4Hj58WFNTU1paeurU
qZiYGJ012oaeiHk0JmIekgX69ddfN27c6O7ubvBTJbQN021UVVX17NkTMbOu
rk7iN5LMldqZ586dO1999ZW/vz+YZ8OGDfv378/LyyspKamsrCTmsboeP36M
BvPo0SPEH2Su2tpasCUIMycnZ9OmTUgHOmIekjEZnM9DzEMS0X//+98LFy44
OTkhAhjcQQltwywbu3btGjlyZFlZmcRvJJkrDTCPt7f3pEmTIiMj4+Pj9+3b
d+bMmeLi4ps3b96/f1/6Vzi49CAHRYpoX11dfe/evbt371ZUVBQVFaWlpUVH
R5eWlrJDrM4833///bp161JSUs6fP49mQ8yjdjHmQSc9duzY1q1baT4PSVwA
Hgysxo4du2XLlob2UULbMMsGQuvkyZPnzp1La/XYWRpgnq+//hrdISoqKi4u
bu/evezV6kjHtbW10r/C0SQOOZWVlTdu3MBQ6+LFi2g2GRkZGKeHh4ezKzxM
Vmce0OycOXOSkpLy8/PZapPWPT/JzkLHRPdEE0pPT9+0adPChQs9PT3feuut
V199VfxAJeQ1Yh47C+Hop5/+//bOP6qqKv/7rCUVq5jCeWgWFRUVk1g0Qw0p
TXwTG0YpKclIsVDJyMHCFhklGcXYLdFooiQVRaXCuibJTVFRMTXRyKiwSNEh
02KSCssaVsPT16fheS/26qzTPfeee36ffc/9vP9g8eNyefHZe3/2e5/9q3Pq
1KmoJ8hL/l7GQ91Qi4G8WlhYWFFRgRE63Q5pmYLd8+Dj9OnTZ8yYUVNTA8+z
YcOG1tbWw4cPI6lSXlIiGZMDP4kwoqQ+G9T777+/Z8+e7du3w1i+8cYbGKHD
7Tz00EMYrYvf0HDPs3z58qeffhqep6WlhblcOoUgeIXKdvLkSVSq/fv3b9my
5eWXXy4rK4PnSUtLGzNmjPzv8tCvkeexUj/++COyDQwPUo38Lice6oYGDLx+
zpw5paWlHR0dMo6OZKAc4HkeeeSR3NxceJ6VK1euX79+7969+P7x48eRl2gz
oFT+TA56om+//RZx++KLL44cOfLpp5+2tbXBz2zbtg1Ocu3ata+88grsx9Kl
S/8xKAxPnnvuOel1ooZ7HvzpadOm4ePbb7+NzNDd3d3X10fDoiBVf38/O5Dw
3XffbWxsRHVCzp8wYcKkSZN87kEWi4d+jTyPNUI9Qcf0/PPPP/jgg/DGAWe0
eagb2jA+//zzyspKDB7RHJCEdQKQAsoBnqekpGTKlCmrVq2C7XnzzTf37Nlz
+PDhL7/88ocffiDPMxDI5Hz11VefffYZIvnRRx/t27cPvmLr1q2wjq+//vpL
L71UXV29ZMmSikEtWLAAnyPOMDyzZ89+8cUXff45wz0PTOz111//2muvAez9
999H4YL5p59+osINOqHIUPHQ9js7O7dv3/7qq68uXLhw1qxZ48ePHzduHEy1
/K/z0K+R5zFVyFSwxGjySDIzZsyYN2/e/v37lWxu4qFuaMZAV+XxeO655x4M
7lasWIEeGc2E8ptJcoDnefbZZ1FVamtr4XkaGhpaWloOHTqE90e1CdlrRmVM
Tk9Pz/HjxxE6JBP4nJ07dzY1NaHFud1uFsPFixcjpMzkwPPgm/gyOzsb3rK+
vr6srEy8ekcqwz1Pd3f3FVdcsWbNGhhaFG57eztMGv4X/GshW75BKgzee3t7
jxw5Ane9YcOGlStXPvnkk/fdd98dd9xx6aWXCsvg/YmHfo08j+FCOtq0adOi
RYtmzpw5atSoSy65BNnG5XIhOynfh8JD3dCJgaEcRpoIwlVXXYU4TJ8+HYl3
8+bNAdsFSZUc4HkwIkAbeemll5YtW7Zu3bq3334bo0i8P7rF0Dn9wJ/JOXHi
BFLKl19+efjw4fZB7dixA+0I5vC1115btWrV8uXLkW2YyXnhhRcQw/LycoQU
3ZBgcqQTWDIy3PNAY8aMQQZobGzcsmXLnj17Ojo6kAfwP/74449ke4JFaIzs
Ic+BAwfeeuuturq6hQsXFhcXo2Rvu+22/Pz8gO/AQ79GnkePYHo/+OADFP3c
uXOzsrIuv/zysWPHwu5OmDABeQbDK1WpRiwe6oZRGLt370Y1qx1UXl7e6NGj
w8LCLr744ptuumn27NkYlu7du5e2cmiWMzzPpEmTli5dWl1d/cYbb+zatevQ
oUPd3d3o8Z26Kuy/g/IyOT/88AMaAsbRMDkYMiA4SC97B8VWHa9evXrFihVw
NfA2MDmIW1VVFQzPggULkIIefvjhRx55BC9Ta3K8ZIbn2bp1a3x8PAaDzYPa
t2/fwYMHkRbg6GB7kEhpeQ/n+vnnn/v6+r7++mu2RR1jkyVLljz++OOFhYVT
p0698MILvVbC+xQP/Rp5HuU6cuQIxilwtui4R4wYERkZefXVV6elpZUNSpxk
uOpQ+MRAxUPEmAuCMjMzw8PDr7rqKvR98+bNW7t2LV1moVAO8Dwvv/zy5MmT
YXhge+rr61Ex0CF+8cUXMACO8Tz+TA583TfffAODB58DpweT09LSsmfPHqQa
hALjKQwKEJl//KIXX3wRPgdZ6LHHHoPDcblcbHjF/goneUOq77///uabb777
7rthfjZv3tzU1IR/E/UWSRXuDgWNgLAVPmR+eBOrt+z4SuRt+FUYHhhv1L2S
kpL7778fo9c777zzXwp04MABJS+TV3t7u55fB/+NN95InsdLGGoh8WIAhQId
PXr0+eefn5KSct11102cOHH27NnIRa2treYVyr/4qBvWYyCq7CRzxBnRvvba
a6OiokaOHHnXXXdhJLt+/XoMMeyuGtyJeR6Ms0wqFH8ysG6gZ58wYcKzzz6L
kePrr7++Y8eOTz755PPPP//222/RD9odYI1iC48hqcnBYPnEiRNdXV2dnZ0w
ORggwwCwVcewf+hNhK1VaAuICXzOM888U1paWlxcnJ+fz1KQ2YWiVvLRQGnC
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
     "], {{0, 357}, {764, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{764, 357},
   PlotRange->{{0, 764}, {0, 357}}]], "Input"]
}], "Subsubsection",
 CellChangeTimes->{{3.700488120396885*^9, 3.700488141697119*^9}, {
  3.702814902661104*^9, 3.7028149037743535`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"R1", " ", "=", " ", 
     RowBox[{"RotationMatrix", "[", 
      RowBox[{
       RowBox[{"q1", "[", "t", "]"}], ",", " ", "e1"}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"The", " ", "first", " ", "rotation"}], ",", " ", 
     RowBox[{
      RowBox[{"first", " ", "intermediate", " ", 
       RowBox[{
        RowBox[{"w", "'"}], " ", "--"}]}], "\[Rule]", " ", "world"}]}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"R2", " ", "=", " ", 
    RowBox[{"RotationMatrix", "[", 
     RowBox[{
      RowBox[{"q2", "[", "t", "]"}], ",", " ", "e2"}], "]"}]}], "   ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Second", " ", "rotation"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"w", "''"}], "--"}], ">", 
      RowBox[{"w", "'"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R3", " ", "=", " ", 
     RowBox[{"RotationMatrix", "[", 
      RowBox[{
       RowBox[{"q3", "[", "t", "]"}], ",", " ", "e3"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "The", " ", "last", " ", "rotation", " ", "last", " ", "intermediate", "  ", 
      RowBox[{"bodyframe", "--"}]}], ">", 
     RowBox[{"w", "''"}]}], "*)"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.697023513275732*^9, 3.6970235328245783`*^9}, {
   3.697023706577409*^9, 3.6970237196947308`*^9}, {3.6978070640975604`*^9, 
   3.697807064253944*^9}, {3.6978071042673187`*^9, 3.6978071638261356`*^9}, {
   3.6978072188347454`*^9, 3.6978074942418737`*^9}, {3.6978075288509097`*^9, 
   3.6978077946628227`*^9}, {3.6978078256250396`*^9, 
   3.6978078502766457`*^9}, {3.69780867025316*^9, 3.6978087613190546`*^9}, {
   3.700307628845448*^9, 3.7003077236260624`*^9}, {3.7003090737640157`*^9, 
   3.70030910055422*^9}, {3.700310146475283*^9, 3.7003101492645073`*^9}, {
   3.7003102050418515`*^9, 3.70031020805982*^9}, {3.7004686287779284`*^9, 
   3.7004686329531045`*^9}, {3.700468883339421*^9, 3.700468885885234*^9}, {
   3.700468955233527*^9, 3.7004689585743504`*^9}, {3.700469060856281*^9, 
   3.7004690619120874`*^9}, {3.7004703926669044`*^9, 3.700470396068942*^9}, {
   3.7004711982681694`*^9, 3.700471204311143*^9}, {3.700485141606286*^9, 
   3.700485181371625*^9}, {3.700485212689622*^9, 3.700485295552185*^9}, {
   3.700485434007103*^9, 3.7004855134030895`*^9}, {3.700485611956498*^9, 
   3.700485612020518*^9}, {3.7004857725121756`*^9, 3.7004857803408084`*^9}, {
   3.700486504182706*^9, 3.700486548211136*^9}, {3.70048667979175*^9, 
   3.700486817839339*^9}, {3.7004869137530084`*^9, 3.700486935694216*^9}, {
   3.7004869811827264`*^9, 3.7004869961482863`*^9}, {3.7004870312425137`*^9, 
   3.7004872759617844`*^9}, {3.7004873090752907`*^9, 
   3.7004874440757837`*^9}, {3.700487488974024*^9, 3.7004875906927185`*^9}, {
   3.700487630566186*^9, 3.70048765305684*^9}, {3.700487930483673*^9, 
   3.7004879378073*^9}, {3.7004880142562447`*^9, 3.7004880178811903`*^9}, {
   3.7004881133732824`*^9, 3.700488143934326*^9}, 3.7004881885126104`*^9, {
   3.7004910585948477`*^9, 3.7004910606023855`*^9}, 3.7004912571428313`*^9, {
   3.700491303919323*^9, 3.700491311450804*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"Cos", "[", 
      RowBox[{"q2", "[", "t", "]"}], "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       RowBox[{"q2", "[", "t", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"q2", "[", "t", "]"}], "]"}], ",", 
     RowBox[{"Cos", "[", 
      RowBox[{"q2", "[", "t", "]"}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7009995368740625`*^9, 3.702814863897479*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Relate", " ", "euler", " ", "angles", " ", "rate", " ", "of", " ", 
    "change", " ", "to", " ", "angular", " ", "rate", " ", "in", " ", "body", 
    " ", "frame"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Omega]", " ", "=", 
     RowBox[{
      RowBox[{"e3", "*", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"q3", "[", "t", "]"}], ",", "t"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{
        RowBox[{"R3", "\[Transpose]"}], ".", " ", "e2"}], "*", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"q2", "[", "t", "]"}], ",", "t"}], "]"}]}], "  ", "+", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"R3", "\[Transpose]"}], ".", 
        RowBox[{"R2", "\[Transpose]"}], ".", 
        RowBox[{"R1", "\[Transpose]"}], ".", "e1"}], "*", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"q1", "[", "t", "]"}], ",", "t"}], "]"}]}]}]}], "  ", ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Method", " ", 
      RowBox[{"two", ":", " ", 
       RowBox[{
       "get", " ", "unit", " ", "vectors", " ", "of", " ", "intermediate", 
        " ", "frames", " ", "explicitly"}]}]}], ",", " ", 
     RowBox[{"expressed", " ", "in", " ", "body", " ", "frame"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"e1b", " ", "=", " ", 
     RowBox[{
      RowBox[{"R3", "\[Transpose]"}], ".", 
      RowBox[{"R2", "\[Transpose]"}], ".", 
      RowBox[{"R1", "\[Transpose]"}], ".", "e1"}]}], ";"}], "  ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"e2b", " ", "=", " ", 
     RowBox[{
      RowBox[{"R3", "\[Transpose]"}], ".", 
      RowBox[{"R2", "\[Transpose]"}], ".", "e2"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"e3b", " ", "=", " ", 
     RowBox[{
      RowBox[{"R3", "\[Transpose]"}], ".", "e3"}]}], ";"}], " ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"\[Omega]2", " ", "=", " ", 
    RowBox[{
     RowBox[{"e1b", "*", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"q1", "[", "t", "]"}], ",", "t"}], "]"}]}], "+", 
     RowBox[{"e2b", "*", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"q2", "[", "t", "]"}], ",", "t"}], "]"}]}], " ", "+", " ", 
     RowBox[{"e3b", "*", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"q3", "[", "t", "]"}], ",", "t"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Should", " ", "be", " ", 
     RowBox[{"zero", "!"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]", "-", "\[Omega]2"}], " ", "//", 
    "Simplify"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzFtIWnEAx3GzBj5UOJhdqMwNBmFGIZphBrOx4ZtQWwPXQ9lNZFnYBeqh
xC4jxTFjG2NClKMpFIyVCIVKF7DD1osHipMtqKwOZcgaIVQv/X/n4ccHfg/f
x8aehg4+j8d7Sga36bLnY86k9r/x2wv4ZLjhLdTUppuhqjRzP8OV1OolAs5D
l+AQBnqGWagJGlLQEt4S8ok+dZEIMsrX1bCRp1BDXVxXBxOF1He4pJT+hOc5
np2om/QE/UcwZq1xbBFlIbcLTij1QorIDPo595rm8mH2RUYB/H3y1SqaTmp3
RsV9cOqveRruNoY4c4e6PPBRK83p6/T4IV0Z5tS9EenziFGFnZP5RC3D4+up
AFzqXLaXEA0nC++h8eEXJ7QtXH2GVepnPlh8JvsFvZ6RMBT5bZyRto8xyLIO
Gq4yDyrExNn1STnMarqphwf76ldwvqCmhftVaSM8ZeZNcDMyboaLG6wF/ouO
uCBl8roh/c7uhYryUj9ck+4GoFxMr0BvbC4Ef8wG16A1x/AHblyXxGDo5SUD
ex2OBJyJS1gYtFzcwviH0zvYfjxjkhBbL1PdkBpI22DqTjUJ7wFdYC1T
  "]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"q3", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["q1", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"q3", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["q2", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"q3", "[", "t", "]"}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["q1", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "-", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"q3", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["q2", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["q1", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["q3", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7009995369541035`*^9, 3.7028148639574814`*^9, 
  3.7028149132470245`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.7009995369541035`*^9, 3.7028148639574814`*^9, 
  3.7028149132570252`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.700568458257636*^9},
 NumberMarks->False]
}, Open  ]],

Cell[CellGroupData[{

Cell["Results ", "Subsubsection",
 CellChangeTimes->{{3.700488167799062*^9, 3.700488169071524*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Complete", " ", "rotation", " ", "matrix", " ", "from", " ", "body", " ",
      "frame"}], " ", "\[Rule]", " ", 
    RowBox[{"world", " ", "frame"}]}], "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Reuler", " ", "=", " ", 
     RowBox[{"R1", ".", "R2", ".", "R3"}]}], ";"}], " ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Angular", " ", "rate", " ", "of", " ", "body"}], ",", " ", 
     RowBox[{"expressed", " ", "in", " ", "body", " ", "frame"}], ",", " ", 
     RowBox[{
     "related", " ", "to", " ", "the", " ", "euler", " ", "angles", " ", "of",
       " ", "choice"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]x", "[", "t", "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Omega]", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "//", "Simplify"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]y", "[", "t", "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Omega]", "[", 
      RowBox[{"[", "2", "]"}], "]"}], " ", "//", "Simplify"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]z", "[", "t", "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Omega]", "[", 
      RowBox[{"[", "3", "]"}], "]"}], " ", "//", "Simplify"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.697023513275732*^9, 3.6970235328245783`*^9}, {
   3.697023706577409*^9, 3.6970237196947308`*^9}, {3.6978070640975604`*^9, 
   3.697807064253944*^9}, {3.6978071042673187`*^9, 3.6978071638261356`*^9}, {
   3.6978072188347454`*^9, 3.6978074942418737`*^9}, {3.6978075288509097`*^9, 
   3.6978077946628227`*^9}, {3.6978078256250396`*^9, 
   3.6978078502766457`*^9}, {3.69780867025316*^9, 3.6978087613190546`*^9}, {
   3.700307628845448*^9, 3.7003077236260624`*^9}, {3.7003090737640157`*^9, 
   3.70030910055422*^9}, {3.700310146475283*^9, 3.7003101492645073`*^9}, {
   3.7003102050418515`*^9, 3.70031020805982*^9}, {3.7004686287779284`*^9, 
   3.7004686329531045`*^9}, {3.700468883339421*^9, 3.700468885885234*^9}, {
   3.700468955233527*^9, 3.7004689585743504`*^9}, {3.700469060856281*^9, 
   3.7004690619120874`*^9}, {3.7004703926669044`*^9, 3.700470396068942*^9}, {
   3.7004711982681694`*^9, 3.700471204311143*^9}, {3.700485141606286*^9, 
   3.700485181371625*^9}, {3.700485212689622*^9, 3.700485295552185*^9}, {
   3.700485434007103*^9, 3.7004855134030895`*^9}, {3.700485611956498*^9, 
   3.700485612020518*^9}, {3.7004857725121756`*^9, 3.7004857803408084`*^9}, {
   3.700486504182706*^9, 3.700486548211136*^9}, {3.70048667979175*^9, 
   3.700486817839339*^9}, {3.7004869137530084`*^9, 3.700486935694216*^9}, {
   3.7004869811827264`*^9, 3.7004869961482863`*^9}, {3.7004870312425137`*^9, 
   3.7004872759617844`*^9}, {3.7004873090752907`*^9, 
   3.7004874440757837`*^9}, {3.700487488974024*^9, 3.7004875906927185`*^9}, {
   3.700487630566186*^9, 3.70048765305684*^9}, {3.7004876857071104`*^9, 
   3.7004877708141413`*^9}, {3.7004878169361277`*^9, 
   3.7004878793836346`*^9}, {3.700487964329399*^9, 3.7004879930266867`*^9}, {
   3.7004881513260145`*^9, 3.7004882320002947`*^9}, {3.7004888364920845`*^9, 
   3.700488848282539*^9}, 3.700493515480613*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"q3", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["q1", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"q3", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["q2", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{3.700999537018121*^9, 3.702814864037294*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"q3", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["q1", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "-", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"q3", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["q2", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{3.700999537018121*^9, 3.7028148640472937`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["q1", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["q3", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}]}]], "Output",
 CellChangeTimes->{3.700999537018121*^9, 3.7028148640472937`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["q1", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["q3", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.700822373017639*^9, 3.7008223732006435`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["q1", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["q3", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}]}]], "Output",
 CellChangeTimes->{3.7009995370641465`*^9, 3.7028148641157694`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

\
\>", "Section",
 CellChangeTimes->{{3.7008223779627843`*^9, 3.7008223868230505`*^9}, {
  3.7028149640371876`*^9, 3.7028149698709974`*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.700822388733091*^9, {3.70082777806485*^9, 3.7008280821876683`*^9}, {
   3.700828129289383*^9, 3.7008281414414067`*^9}, {3.70082875345715*^9, 
   3.7008288527399893`*^9}, {3.7008288827429843`*^9, 3.700828901343552*^9}, {
   3.7008289360395203`*^9, 3.7008289622074733`*^9}, {3.700828998853199*^9, 
   3.7008290024735537`*^9}, {3.70082905867866*^9, 3.7008291383226023`*^9}, {
   3.700829202271083*^9, 3.700829227736333*^9}, {3.700833849132373*^9, 
   3.700833923006939*^9}, {3.7008340392814465`*^9, 3.700834042162771*^9}, {
   3.700834074331341*^9, 3.7008341003519*^9}, 3.700834450238571*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lagrangian ", "Section",
 CellChangeTimes->{{3.697022124543494*^9, 3.697022128335517*^9}}],

Cell["\<\
Form complete lagrangian. TODO: Stuff looks real messy, verify that all \
equations actually make sense. Perhaps we need to organize things on vector \
form more. 

Good source, they forgot the translation of the center of mass though: 
http://www.colorado.edu/physics/phys3210/phys3210_sp14/lecnotes.2014-03-19.\
The_Lagrangian_for_Rotational_Motion.html \
\[LineSeparator]\[LineSeparator]Nice expanation of gen. momenta: 
https://www.youtube.com/watch?v=42oXOuuhhJw&t=14s
\
\>", "Text",
 CellChangeTimes->{{3.6970221379564347`*^9, 3.697022141296303*^9}, {
  3.697027738002858*^9, 3.6970277521636796`*^9}, {3.700309802313739*^9, 
  3.700309847703401*^9}, {3.7004899832614136`*^9, 3.70049000306135*^9}, {
  3.7007990397567153`*^9, 3.700799050589017*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"T", " ", "=", 
    RowBox[{"Tc", " ", "//", "Simplify"}]}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"+", "Tw1"}], "+", "Tw2", "+", "Tw3"}], " ", "//", "Simplify"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"U", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"M", "*", "g", "*", 
         RowBox[{"Reuler", ".", "Rcb"}]}], ")"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], " ", "//", "Simplify"}]}], " ", ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "Element", " ", "three", " ", "is", " ", "the", " ", "vertical", " ", "Z",
      " ", "component", " ", "of", " ", "the", " ", "vector"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"U", " ", "//", "MatrixForm"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L", " ", "=", " ", 
     RowBox[{
      RowBox[{"T", "-", "U"}], " ", "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.697022150832569*^9, 3.6970221730203795`*^9}, {
   3.6970226298782597`*^9, 3.6970226515477924`*^9}, {3.6970234136389093`*^9, 
   3.697023498434634*^9}, {3.6970236434442453`*^9, 3.697023674148446*^9}, {
   3.697023826045677*^9, 3.6970238330668154`*^9}, {3.697027382225136*^9, 
   3.6970273878044567`*^9}, {3.7003085376781693`*^9, 
   3.7003086322874594`*^9}, {3.700308748257255*^9, 3.7003087531792345`*^9}, {
   3.7003087842659535`*^9, 3.7003087879477158`*^9}, {3.700308865530265*^9, 
   3.700308914872396*^9}, 3.700308949471367*^9, {3.7003106950082054`*^9, 
   3.7003107241561317`*^9}, {3.7003109475252914`*^9, 
   3.7003109480833044`*^9}, {3.700468611492219*^9, 3.7004686170645638`*^9}, {
   3.700491022933247*^9, 3.700491043445781*^9}, {3.700492535750881*^9, 
   3.700492550353776*^9}, {3.700492638003121*^9, 3.700492640416768*^9}, {
   3.7028149940875444`*^9, 3.702815002458496*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"0.5`", " ", "Ic0"}], "+", 
     RowBox[{"0.75`", " ", "mc", " ", 
      SuperscriptBox["r", "2"]}], "-", 
     RowBox[{"0.75`", " ", "mc", " ", 
      SuperscriptBox["r", "2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        RowBox[{"q2", "[", "t", "]"}]}], "]"}]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["q1", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"0.5`", " ", "Ic0"}], "+", 
     RowBox[{"1.5`", " ", "mc", " ", 
      SuperscriptBox["r", "2"]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["q2", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
  RowBox[{"1.`", " ", "Ic0", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["q1", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], " ", 
   RowBox[{
    SuperscriptBox["q3", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{"0.5`", " ", "Ic0", " ", 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["q3", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{
  3.700999537174182*^9, 3.7028148642571487`*^9, {3.702814983760151*^9, 
   3.702815002783542*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{
   SqrtBox["3"], " ", "g", " ", "M", " ", "r", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"q2", "[", "t", "]"}], "]"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.700999537174182*^9, 3.7028148642571487`*^9, {3.702814983760151*^9, 
   3.70281500279354*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Generalized forces
\
\>", "Subsubsection",
 CellChangeTimes->{{3.700798848523652*^9, 3.7007988526768427`*^9}}],

Cell["\<\
A generalized force = 0 means that the generalized momenta is preserved 
\
\>", "Text",
 CellChangeTimes->{{3.700798859456956*^9, 3.7007988878076196`*^9}, {
  3.700798933990272*^9, 3.7007989348101053`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Fg1", " ", "=", " ", 
   RowBox[{
    SubscriptBox["\[PartialD]", 
     RowBox[{"q1", "[", "t", "]"}]], "L"}]}], "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fg2", " ", "=", " ", 
   RowBox[{
    SubscriptBox["\[PartialD]", 
     RowBox[{"q2", "[", "t", "]"}]], "L"}]}], " "}], "\[IndentingNewLine]", 
 RowBox[{"Fg3", " ", "=", " ", 
  RowBox[{
   SubscriptBox["\[PartialD]", 
    RowBox[{"q3", "[", "t", "]"}]], "L"}]}]}], "Input",
 CellChangeTimes->{{3.7007989362374587`*^9, 3.7007989746767397`*^9}, {
  3.700799375908597*^9, 3.700799375971199*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.70099953724472*^9, 3.70281486463799*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"1.7320508075688772`", " ", "g", " ", "M", " ", "r", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"q2", "[", "t", "]"}], "]"}]}], "+", 
  RowBox[{"1.5`", " ", "mc", " ", 
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", 
     RowBox[{"q2", "[", "t", "]"}]}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["q1", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
  RowBox[{"1.`", " ", "Ic0", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["q1", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], " ", 
   RowBox[{
    SuperscriptBox["q3", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{3.70099953724472*^9, 3.702814864647986*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.70099953724472*^9, 3.702814864647986*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Generalized momenta 
\[LineSeparator]\
\>", "Subsubsection",
 CellChangeTimes->{{3.700798999772347*^9, 3.700799003929105*^9}, {
  3.7008008210211086`*^9, 3.70080082282129*^9}, {3.700822827183323*^9, 
  3.7008228292343445`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Pg1", " ", "=", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[PartialD]", 
     RowBox[{
      SuperscriptBox["q1", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]], "L"}], " ", "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"Pg2", " ", "=", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[PartialD]", 
     RowBox[{
      SuperscriptBox["q2", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]], "L"}], "  ", "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"Pg3", " ", "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[PartialD]", 
     RowBox[{
      SuperscriptBox["q3", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]], "L"}], "  ", "//", 
   "Simplify"}]}]}], "Input",
 CellChangeTimes->{{3.700799056492337*^9, 3.700799138677716*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1.`", " ", "Ic0"}], "+", 
     RowBox[{"1.5`", " ", "mc", " ", 
      SuperscriptBox["r", "2"]}], "-", 
     RowBox[{"1.5`", " ", "mc", " ", 
      SuperscriptBox["r", "2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        RowBox[{"q2", "[", "t", "]"}]}], "]"}]}]}], ")"}], " ", 
   RowBox[{
    SuperscriptBox["q1", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{"1.`", " ", "Ic0", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["q3", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{3.7009995373227468`*^9, 3.7028148647279863`*^9}],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"0.5`", " ", "Ic0"}], "+", 
    RowBox[{"1.5`", " ", "mc", " ", 
     SuperscriptBox["r", "2"]}]}], ")"}], " ", 
  RowBox[{
   SuperscriptBox["q2", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}]}]], "Output",
 CellChangeTimes->{3.7009995373227468`*^9, 3.7028148647379885`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"1.`", " ", "Ic0", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["q1", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{"1.`", " ", "Ic0", " ", 
   RowBox[{
    SuperscriptBox["q3", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{3.7009995373227468`*^9, 3.7028148647379885`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.7008008262097206`*^9},
 NumberMarks->False]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Equations of motion \n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnQtUVNfZ95G7gNwEERSt1phojc2ladr0zQpGEuLEWyNqJ7W01dfWTt4S
88LKp+str2IQEAkjwQtRgsGaSPxC0jYsYmhWnSg3BcGRUDWEha73yzLi6spX
A+0XVmfxPXP2mTNnzpy5X84A/98yWcyeffZ5zjnw389+9rP3mbf5xed+FRwU
FJQXSf977pf/a9l//ucvd64LpQ9P7szfujmEfrhF//1rSlCQ8ecxAAAAAAAA
AAAAAAAAAAAAAAAAAHib0tLS8PDwIBFbt25V2iie2trasrKy3U6wd+/eqKio
uLi4Bx980J8WdnZ2MgPKy8v7+/sd1qeax48f971dAAAg5dKlSxkZGenp6TEx
MbGxsaGhoYLsK23a2JEjRyI5gpwjOTmZLuGRRx559913/WZkTk6OYEBCQsL8
+fPt16e+lYx89NFH/WMeAAAIXLhwIYzjZz/7WXd3d0VFRYBo/rVr1xYsWEDa
uGTJEomwR0dHx8fHi+0kUlNTly5d+tJLLx06dMifdq5ateo73/kOdZpkKrPt
8ccft1Nfq9VSNZJ9f/ZKAABAdHR0MBd61qxZQuGzzz7LVJTcfqUMu379OpkU
HGxcKnLx4kXJt4mJiVT+0EMPBUJ4ZN++fW1tbfTDnj17yKqkpKRXXnnFTn3q
Hagajar+8Ic/+MtGAIDv+GagoTgzu7h+8BulLXEM0x9yTQ8fPiwU7t69OyIi
IiUlZcOGDUoZtnHjRtbvkDHW37KvnnvuucHBQb+bZhN2M7/73e82NjbaqnP+
/HkW//ne977nT9sACDAMd9trVNkalbbrrtKmeMy40Xxy8kl/yJe+7777xOUk
sw8//HBVVZVSho1xqh4aGkquvrUnf+3aNRbVofGIEqbZhPVE27dvt1OH7i3V
SUtL++Mf/+g3wwAIPCaS5o8b1q5dywI4JSUlStsihQxbtWpVa2ur9VcnT56c
MmUKVTh79qzf7bJJRUUFmRQZGWk/3MT6hccee+zzzz/3l2kABCDQfH/T1dXF
MjPnzp1rHTAPZBISEsLCwgJN82NjY6n3tD/rvXLlSqb58fHxfjMMAJ9hGB7U
lWhyM7Nzc7S6gRGDS8fa1fzhgfaPqwvyMrM19E9VcPrc4LDo29HbvWe482pE
//jQimGwcUt27paG3v7mmhxzOZna3Vi7X8Uqq/dXt940t2i4UZ+bm5nb2P/l
1Sa+Tl5+nf62+IIMd/TvH82xOKOGDhkw1mGxnZdL2r/iK4/cbDlTn69m1fLy
aztEN8cUCBr4Qt/M11EVvNc9NOrK3XMHFmSIiorKysry9bm8y/Tp05lsBo7m
9/X1sWlZGoPYqqPT6Zjgp6WlaTQaf5oHgE8Y6asWCa+LHrsdzSdVrC5paNUz
GRz5vJ7EX13T8jWTTcNw7+mc7F1l7UP02TB0sUyTa9Je7mtO83MK9m0p+LCf
lNbwz+F/GAyDH+7QfvBR7x2u1nB/Q4VKLNFM83/9u5xN+4/pqY5heODDfHVu
Tm2fqV+4q68tzNTUtRhNGr3dXpdj7FZuGMwGizSfWiusqf/4KtdlsKbEl8lX
ztHs5LsVdoGa03rXOk2XYfoTGhp6+fJlT9pxZp2UNVqttre3143THT9+nFl+
zz33eGK2d6ErSklJsT8tu2zZMmb50qVLEdgBEwBOXUVOr1mWnTra6dgOqylI
9Fct2pdFIi+dP+WtUlc1fWnbc/66q0Ssw0zz1RX1A4Lvz51FuCJjfZHIm8YF
ljaIOhELLJviK+flN3xuOpnkAn2FsIDIk0beeOMNFtBwlfDwcPc0/7e//e3U
qVNZoqYnlnuX9evXJycn28m3F5x8hj9tA8BX+MrPt6rKh2s4yeX0VnSUVDCZ
5jtoViLavOaL+yyLroRrU6zJsjJuS7QlvZJMZYsL9A1lZWUs9WXjxo0eNvWX
v/zljOvcvHnTvdMxzQwLC3O7Ba/DAjsLFiy4deuWbIXPPvuMKkRERND/p0+f
HghrCgDwBr6L51tWtZBEp/x872q+Z35+QGh+SkoKy9I8deqUz07iE5jmR0ZG
ut0Cm8hwFTtCnZGRkZSU9Nxzz8l+e+7cuSBuR4jo6Gg4+QCYsKv5hjv6jz+w
nKUVJJEdKI7nbxcF3m1p/ujt3tZ67S65GVgnNJ91NBbx/MLq3ruWlUVjjaGr
HzVIJnyV1PzLly/Hx8czza+rq/PNSXzCyZMn2arhp59+2u1GdDqdGxMQV69e
tdVgELf21la+Pbn3NCqZP38+E3wFlzYDEEjY0XwWOWHTqVxVi9jOrabCl3O0
75qyenaVvN8nTrCR03x2LlEqjquxnS91O9S7Sv73W3wqjuboaX46WFzZJONs
ssCciqO8n19UVMT0Z/ny5Z63Vlpa6oaElpeXu3EuIZj/6quvem65V6AehLqh
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
vlmJqZtgffT2nNo+cT8lwr7mj95qrlLRHW74fNjYsv5Ywe9eKiiyq/nsKZuf
o4MbaCeeby68q68tzDRdMql3d91+wSpz/V//LmfT/mN6OhG7q7miq+Za0NS1
8Peko7ryz6Y7Nm40XwjVKm2IC0Dz/c+yZctYTi+NYoK47NP58+cnJydbaz51
BzRmoSGendakk7CuDcm9rflcB6Qq1N0ye/YW4wLeWnVV05ejY/ZxPrbD1TRd
ArsikYMtuQRmT3bejuZbttuViB6TIJGg8WcRdJKrbxZ5iWRx4mZxyfY1za7m
S+7/mNDpu6D5dm+g9eWzNsQPmvVxuRbdFl/BdJn8xwquY5Vrlqvgu4lpQY3d
xqWz+Mckhziz0soNzd+4cWNSUlKCK6SlpTlsdv369b6+IS5dpo/IyMiIiYn5
6U9/6kzlmTNnTps2zUHevjf8fMuIhFltXNR8WW2x+Etnmu+Ukc5rvkW3wime
+CiJoDk1ASGRTd7PF4uwxZ2Rypdlj2Ct0tIuQwLTfNlMKtk+mtX3QPOlOTkO
NV+2V7K8SzL3WWIY1wjv53ufP/7xj+s9ICcnx5mzuKT5HprkDM6s8XFD83/9
61+7YYzDZisqKrx+ByRs2bLF+cv0BfSLNGvWLLqBwobP9jl//rwT+2P7N55v
T/PlkwzFow/fa75zfr53Nd+uny+fDWvZt1pix89nLcv1qv7UfH6sJBmnWNrm
WPPFv7dCoGmcUVxczKbnlDbEBRDbsUan07kxh0u8/fbbdpplL3whzffbhTiB
LzTftrbIa77ErbV0j+XFefR2b2u9ZJZWMMl4YK5FPN8ceLep+Yahqx818POJ
VjOwDjWf3UZxPN8cruc134XMdj9ovt0b6CfNZ83e0X/8Z27G3/TIfA97ezjD
w6YOHTqUnJzstn6K334+f/58OzUvXrwo5K57SMBq/qVLlzZu3Ei3IohLcaGn
47fltK+88op7gaPFixfbaValUoWFhTmz23NbW9s999wTFRVFLoSPt9/xruY7
zvz0hp/PziJKArFwU7kpTs3Rt/hcEfIhz+jF0QNZzWfxH3MqjquxnVtNhS/n
aN81ZSvtKnm/zyxfLied2tF8r8R27N/AMX/FdsSweWR/TNoWFRU9/vjjLMFy
0aJFHram1+uDuCWWzr+UVkD89vO6ujr7bz/3okqT5rN3i3ulNW/R1dUVFxf3
7W9/e9u2baT2bH9R6gf9tj2+e36+/Zezs305Tpw44fDs06dPJ81ftWoVDQp2
7tzpvcuyxpFKS2f32OSd7Tlcmdi15fm8oPlWimQhWcZvLSaRpRZYa5F1dN1F
zTeaamdSWKLJDnFtDpdPExLFTKwuh+XYWEaibN5AuQpjsp27XBKv5RSt05pv
f4LD+6Snp9MfoyS/PSYmxtUX2o7Z2DnHIZWVlQkJCeK3n49xGzLYGnowg121
TRbSfLaU1SuteQtS+9DQUFJ+oaSsrCwwxyPOw9aLkesuu9ZAgB46Cb5Op2Mb
Ryus+XzOCcu+GL2tfy9/U1H+f+XZydXkMglFMwtc3vuOSr59b2g+kw5TluDI
zXPMpRf7+RYhmrz82o9bhNxvOT+fzyDlYwvDA62nuSR8l/z8PMv5i/3VZ7qF
uRXDl7od1KCmpok3Y3ig/ePqwt/b8Pzt52oyARfnau7K0Wy30FKWPcVnwxqz
KFf/1/6X1IJE27+BY6bfCpZhO3pn6O8ysRp2yWqWhynkapralL/PkmmOD3do
G/nnIs199XmuJslLSEiI+L3nbBt8N7ZqZLr0i1/8wqWjdsvtMGPr7edj3Bb6
nkeiGKT50dHRgaal7DZKdsBghfX19UpZ5SHkCbAtTMM4Dh48KFvtvvvuYxuH
Uk0a+tlP1PQcGzOM4oR29ufMxFOnHxqymK+U2YbFYk1WpuZofbNI/ZzXfD5o
LDcXLFrLw60nutxkNonLA98kSowcudGk3WWVQyjpSsQrqugy27qbj1plvNuJ
5xtDE6vNgwt+dlI83LBYk5W9q6RBZ+6GpNiYCjffc8lSpv+xHkdwfUGeef3X
341zHKKJbDs3UPLQbcfnqZFmYRUb9fKNFlfk2M8XL+liv1pO5rJ6SlVVFf0l
LliwQFz4H//xH0HcVmautpaYmBhkuUWzM3R0dKxcuVISEVq/fj214+FLuxzy
7LPPstCWT8/iKjTkefrppy9duiQuLC4uptGQ/ZmOAGfNmjXCG1KY+BcVFcku
Fq6oqKCnT7+Bkj3lgAOMUrNdMoksMyvh3XMa25ed0PTPqiJXY0eTlJqamsOH
D9MPv/rVr+ivT61Wi79l6yIlG106A1trQ+N3N0wS3n5O9PT0rF27Njg42Nqf
r62tbWxspB9IDTx5pReDND8A/fwxbp6aRJ7dDeYSFxYWyoZ32traKisr//rX
v45xEwFffPGFAuY6DXXisbGx1HOJJ38zMjIkb3UkwY+KirLeUw7YR07efR0r
lpV3f25ZA813AClJXFwcyemiRYvoz23KlCn0f6YqLMYSziHesNH5xtmrBumP
ure31/mj2NvPqb9gbz9funQpdTrs7efCNjjXr19n23ORbTTkX7Fihef7YbJ3
prBtpT1px7vo9Xp2pfSY0tPTN2zYQBaqVCq2WQHdJaHm+fPnqc9auHAh3YrU
1FS6J9R/ObncSVlOnDhBAxl6lHSNQdzLAgghRYfttzxz5kwa+pWUlNhPBwIW
8FsrCJFzmTCL98/JpgPMiyPYjhP2l/p6EWi+PVgGSEpKCvsovF9VeEPimEn5
SWHcaH/v3r2sQclLr+zA3n5Oh4inLKkPkrwPa/PmzULMnzxb1rnYye1xhk8/
/ZQklM7urdkBr7Bq1SpycbOyssSFbNqaukIhdaelpSUsLCwtLY1tQE2dI3tq
R44cUcBod6mqqmIv6yGELdpI6oNMbwoj58SNGOOkZuRmizjT3nI61TdQz9Il
TneXbjjmW8bN7jT+Z8+ePfQXRMNqFtUZM8m75LVWr7/+OvOy3DgFKQ8T8Nzc
XGfqs5fwknZJ5itJx8RDjBdffJEsF5tEPi19W1hYKJQMDg4+8cQTpJbOW0tn
CbRN4VgvTN6vuBceMz0p0nwa77ASlr0p3oWeSubNmyd+lST5/FQonp0PEOi5
ixM72bMW/Hy6WPotmjZtGuvp7KeAAgBswd42smbNGqGEvQldMk/KYq1bt251
7yxsLoD+70xl2befj3HxDeHt5/39/bNmzQoS7Z8zNDTERgHihflM813aUZk6
wUDTfKZ+1smuxcXF9PiEG8Vi+9RZC3qo0+lCQkIeeOAB8bYGGzZsoF7A1dcZ
+IFXXnmFfkPYiyzVanWQ1frcyspKGsIsXLgQr0QHwD3YxggkpOL3oTB91mq1
4poRERFU7szaGVnWrl3r/CyA7NvPx0xuLXsxovVSWfLPWS/gnoUCu3btCnJu
Kzb/wDajljwjBvn/4pfeskcpfhm6EFXzn7meUVFR8e///u/0m3b//ffT1Qnj
FwCAV9gttwGasD3OpUuXmPSxzHwhIfDChQuuvouExg4svONM5SAba7hYiIP9
bK35dIrY2FixVufn59NJN23a5JKpNI6gs4sDRMrCnpH1Uri2tjYqX7p0aUND
AythwTdx7vpu7k2IP/rRj9hH6jVIS8nJr6mp8Y/xAICAgr1hVqycTGHYmJrc
Lbb3AskvCxSzOjS+/s1vfuPSiTo7O9n7CsnzdFhZ9u3n1O+I337ONF88XfvU
U0+JAyBPPvkkucdU+J3vfMf5fP7+/v777rsvoBzjgwcPkj0hISGScro6ehDi
aBs9SlJ4STCfeoF33nlnjBN86s1Z8o9kpRsAYJLQ29sbFhYmSBwJ8rRp01gO
DznzSUlJbBaVOoKpU6cePnz4ypUrOTk5pBhubO01d+5cEiVnplNZNs66deuE
EtY3iY8lzSfRI+PZRxJGtnOLUIHc9bKysoULF0oi/PbZuXMnyeayZcucrO8f
qBOkyy8uLmYfe3p6Vq9eTU/h3nvvFU9lZmZmkqqzd1DqdDqWjkX9AouQkNqT
/lOnSYWzZ89W5EIAAIpDOk9CQcpAAkIKSVL54IMPJicnP/DAAywvboxzEb/3
ve8tXryYXH1ytt3YLW2MWxnEojEOQ+VU89vf/rbk7eckU6Th4mr5+fmJiYlL
liyh3oTUTLJ7Z2Nj46FDh6iCS6mbzEISTJcuzdfQOIUeTXR0NHv7+Zw5c2gg
tmbNGkm4+9y5c2xXOvo/PSzqIqn/euKJJ9i3NNSqrq5+9tlnqft2PmkWADDx
IEmvqqoiX/rYsWNjnOSSWkoi9n/961+PHDlC7rQ4689VmNft5I497O3npF3b
tm2ztXXkm2++SV8VFRW9+uqrJHESed+3bx91HGzVqjMyfurUKRLJRx55xBnz
/Awp9v79+9nbz+l6be0aTUOA1157jZ6dVqulu0GXI96OjJ6dsHcc3V4/mQ4A
mKzU1NSwhbSSPHPPOXHihCQznyAXlwrb29tJ+YWlu3ag/oVse+mll7xrm1Kw
zPz33ntPKGGTNfT/X/7yl+L0HgAA8BFs71wSYS++7OPy5ctz5swJCwsjeReX
L1++PDQ0lM6VnJzssBEaL7DAzvvvv+8twxSErcB96KGHxCtw9+7dm5aWRncj
OjoaqTsAAD9w4cIFlsDjrZDym2++ScLO5iNIzYSJTuFbJ4MYbHWnZHODcQrd
4QULFsyfPz8iIiI+Pv73v/+98BX1jwG4GgsAMIFRq9UxMTHklrNdHz3k2rVr
RUVFR48ePXXqFKlZW1ubG4387Gc/I3tIId07PNAoKys7efLkiRMnSkpKDhw4
gJVNAABlyc7OZnt/STbLVYSNGzeyHb2EHYcAAAB4kZ6eHnL14+Li/vu//1tZ
S65evRoVFUUevkajUdYSAACYwHR3d7OMesnGPv6ERhmhoaHU+/zkJz9RygYA
AJgktLe3P/zwwykpKWfPnlXEgBc41q5dq8jZAQBgsnH9+nXx/jB+hmm+UmcH
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAwMTgxIkT6enpMRxhYWEHDx5ct25ddHS00nYB
AADwMqWlpaTzU6dOVavV9LGjoyMkJCSIQ2nTAAAAeJPy8vLw8PDU1NTly5cL
hbGxsZGRkU8//bSChgEA3Mdwoz43NzO3ccAg99F3JwpIDIONW7JztzTcMMh9
nFRcuHCB5J38+UcffVRcHsmxe/duceGnn366Z88eOsS/NgKgLIbhwe6mhqM5
2ZpM/t+ukoazH/XeCWjFYFKsrmn52mD+6Atl/rqrRK0JbM033G2vUflQ879q
0b5svtWBDak6CX50dHR1dbW4XDawM2vWLCqUdAQATGiG+xsqVNl5+bU6/dAo
XzZys6X5g5Lc4wH9Ny7RfN8xDjXf24wnzWfanpycbF2ekZEhKSTN/9GPftTR
0eEv6wBQltFbzVUk+Duab42DP2YJ0Hwz0HyesrKyqKgoknf6v7j88uXLkZGR
paWlShkGgNcYudGk3WUMyGhqmgaHXTrU8KVuh1qjKtQ5ofijt3t11QV5LPij
KqhvEkV+TJGEz24JddT7j+kloSFnWujtb67hQkzF9YPfsKBTY+1+FYs4qfdX
t940X6FsbIf/yDRQCFVx/8yibc8S7pbePMefNDdHe0Y/0OZA8w139M31+Woh
LNY1MCJUHR5obyzR5Arnamy/afmQ7FbgA1Yf6Ad0XB1B1enOdJguYVfJ+739
rdaxHY1K23XX+OmbgYZi4y0d+EKwU1XwXrcwrOMblL3VMnfS1Kzkwi2Hiuzb
9/mAoarg9DkXfzndgwV2iMrKSkk5aT78eTD+uauvLTT/PbrmiTEpeLmk/StH
NUdvt9fl0B91nf62sfnhAaMyF1b3mv70OcX+qWbnal5JWLzIXMHJFnIK9m0p
+LCfBNPwz+F/GAyDH+7QfmCaVmBtiqy1p/kWcI0LYxkHlowZbjUV5mWqK+oH
ho2V9e/xmmZL8y3qs/6i4le89rKns6usfcj40XCnu26/MYzW8LlJ/hxVYBel
2ZefW8m1/6/hkW/GhM6av1fsKE2mA81/OUezk7/qkc/rqb/QnNab+iYHt1rW
zzcMtVTuMnfuzPcwt8ldmqauxfj7wPVQlX/2w0BJ0Py+vj5x+YEDB8TB/EuX
LqWmpqanp4eHh6MjAOMJpglmH8wZARfg/pB5j9ouI33VmlyL4YDlhCmvMEyC
GFw8xOwQOtdCprqq6Uux82mJpE0nNZ9psqBFDiyxDpIYhntP59jUfDtBFXZg
bk5tn9XYhF2mwwrC85UE36wfHOs77Gu+uK9hZtv+bZHcahnNZ8ZbGGYxccxZ
LmrBT5SXl8fExEgCO2Nc0k5aWprwMTQ0dCsHdQQvvPCCf20EwBM88PN5PRFJ
BwtcS4MhsrJmIQKWCiNq3JMWbBksSc50oPlMmgRxc2gJk1NLMbQXz7fTb8o1
ZTG2cljBxkUxeywVWC5vR+rni0/kILFHmgRlrflyF27RU3AVeD/ff+j1+uDg
YFJycehepVJRybp169hH6hcyMzPJ1c/IyKBytmgLgHGD+/F823ploSpMMTQy
/5zVfLdasMYNzWfeptmrd2SJdT84ZlfzZevb+4oZwImtwwo2LoofE1nY43fN
lw4wraP9huFBfg4ixxw18gdMycmTp587OzvXrl0bFhZGHUF3dzer8OMf/3j3
7t0XLlygQhoUIFETTBpsx/NlNN9eTohzmu9iC0ZGb/e21rMezXoq1rHms6wk
8bSCI0smr+bbvdU2Nd9RYNBwR//xn7m55tycyou3/aL7HR0dc+fOjYyMJOWP
50hJSbHOzKeBABVSTX/YBEBgwCuDdd6OhebzmRt2nHDnYjsutsAfJUy2uu7n
s9C9TJt2LJmcsR1Ht9pmbMfJ+SM2KezEzJH3IEknB/7AgQPk6rPsTUmFmTNn
IrADJh+WeSMCElVxlKDuSPPdasGWb+ms5jMn30pnHFhiHfBneT7uzOHKfCWT
UGqngq1JCquOhqXQuK/5jm613ByuKysCHE0Z+xjS9vDwcHEJjQWoMCwsrLq6
mu3GpohhACgAPx0gziofHmg9nW/hSTL9zM3R6vg6IzdbztTvqOQl2rHmu9EC
r1Sm/kjImXdO87lsRsuUmDGnLGGjA4tczdyqkoI8m92ERX2utYaaHXxkhqVx
mrIZ+aRKUQ/ruIKdiWlxrmbFlvLqfLXbmu/oVvOizaJko3eG/m6+OvrNab7B
Mvm5DP/DZdxZuOTPxhY2wWSVGupPWNxe4ucfO3aMSrKysujnMA7/GwaAcoze
7m0zr8cxTgcfrW9us1hfY7mOiavQPWDO7nao+a63MDYmXtTDrRK63ETepq1N
1RyuyRJ1YXYsMbY01Heaj2zn5dd2DIz8rUV8XmvMa7g4O8+IWrNYtUQdjUkG
xddop4LNRQd0CWf4lVxs/ZRx/OJBPN/+rR4bk10FYGX8B03mBWXitWZWy7X8
yNq1a0neY2NjxYVlZWVTp07NyMjIzMxMS0tDij4AAIxrSMaZey8QExMjrrB+
/frZs2er1epLly4pZSQAAACvkJCQwHZae+CBB+j/eFsKAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE4n/Ozz68ZU79a1fvHbmBvv3p84v
qeTq/7lLXyltHQAAAN/y5Vf/b/D2SOu1v73xl/+hf1B+AACYJJC3T/qvtBUA
AAD8AQk+NB8AACYJ0HwAAJg8QPMBAGDyAM0HAIDJAzQfAAAmD9B8AACYPEDz
AQBg8gDNBwCAyQM0HwAAJg/QfAAAmDxA8wEAYPIAzQcAgMkDNB8AACYP0HwA
FGHPnj1BQUFKWwEmHdB8ABRBq9XOmTOnoaHh9ddff+utt5Q2B0wWoPkA+JnO
zs6ioqLExMTU1NQgEzExMUrbBSYF0PwJheFGfW5uZm7jgEHuo+9OJFPhjv79
oznZmkz65wsDxi09PT3BwcEk8qT569atS0pKIrXPzs6mH5Q2DUwKoPk2MAwP
djc1mFTL+G9XScPZj3rvBLR6MSlW17R8bTB/9IXkft1VorYj5oa77TWq7MLq
3rvGOzn0t2Fvn3+cUlpaGhkZSYJPHv6FCxeUNgdMRqD5cgz3N1SosvPya3X6
IdPLgkdutjR/UJJ7nJfTwESi+b7DgeZ/1aJ92R9mjDeio6NZJOfixYtK2wIm
KdB8K0ZvNVeR4O9ovjX+BAuaH8Ds37+faf6iRYuUtgVMXiam5o/caNLuMgZk
NDVNg67FFQxf6naoNapCnROKP3q7V1ddkMeCP6qC+iZR5Mcw2LglO3dLw2e3
hDrq/cf0ktCQMy309jfXcCGm4vrBb1jQqbF2v4pFnNT7q1tvmq9QNrbDf2Tx
FiFUJYm027OEu6U3z/Enzc3RntEPtNnQfOuz0CXc4GoND7Q3lmhyhVM0tltZ
nvuBfkDH1RGOGjMMXW0SrldztF50lMVXdCuar94W2WMY6jvNfg2MQ7aOgRGD
5bn8Pcuwe/du5uSXlZX59cQAiJiImn9XX1to1hzXvM1vBhqKM7NfLmn/ylHN
0dvtdTkkJnV6TmeGB4zKzCLYRphi/1Szc3XBe93GABGLF5krONlCTsG+LQUf
9pNeGf45/A+DYfDDHdoPTNMKrE2RtfY03wKucWEs48CSMcOtpsK8THVF/cCw
sbL+vXy1/clZaz+fPZRdZe1DxiLDne66/cboWcPnw2LLNfvycyu5s/xreOSb
MaELZnfA2N91VBdUcH0fSfrFMk2uir+99BV1Fttzavv4Bkf6qulj5UX+ilrf
LXuf70SU0vwDBw6w2VsSf7+eGAARE1Dz2V+02c90RsAFOLHiPWq7GCUl12I4
YKkknKgKYsXBxUNU2q67rrSQqa5q+nJ0zBaSNp3UfKbhmtN6ZpsDS5jrbna8
jQLbezrHBc1n9XPNgmy2zXR1/FOThNTsPA6uE7G4Oay/5itzd8+lR+9zrly5
wmI7KpXq8uXL1dXVe/bsKSkp6e3tVdo0MImYgJrviZ/PK49IZFjgWhoMsZbB
MYnQ8ZovqPGYQyF1ogVbBkuSMx1oPlNgQQ8dWsKE11I/XYvny7UgGVLJmmrn
LDJfsQsxNWiskGvy8wOFjRs3pqSksAhPVFRUXFzclClTsBoX+JOJqPmexPNt
O5ZMZHhRYnqlkfnnrOa71YI1bmg+Vyjy6h1ZYt0Pjrmo+bIt8Oc19TVypvIj
Hbmz8F/J/BN6FhahYkm2reb8K0VJTEwMCQl58MEHg0RMnTrVumZ4eHhpaan/
LQQTnomp+e5jO54vo/kS39gC5zTfxRaMjN7uba3npyatpmIdaz7LShJPKziy
JJA131FM3jB09aMz9dzsg2kqQTkyMjJIyZ1Myw8NDUXYH/gCaL4EXmmt83Ys
NJ/PTrHjhDsX23GxBf4oYbLVdT+fhe5l2rRjSQDHdpwM3I18Xl+Qp+xy4E2b
NpE/v3z5cifrI4Ef+AhovhWWGSYCEpFxIHoONd+tFqzzYVzTfObkW0WunFpU
Kx4IsDwfF+ZwZaYMnJp6sDOH6/Rsu4w9/qanpycuLm7GjBmKnB0AMdB8Gfjp
gF0lDV2mpO7hgdbT+RaOJdPP3Bytjq8zcrPlTP2OSl6iHWu+Gy3wvrGpPxJy
5p3TfC7v0TJ5ZswpS9jowCJXM7eqxJ7nbN03sWxP0woFPldT1LHam24W52p2
1Wur+cwcLo1TNGUzPND+cXXh703Bt2rT4zMMD3yYL75wv+dq7t27NzQ01Jn4
PPUO69atmzVr1qpVq/xgGJiEQPNtMHq7t8289ImtBmpus5wKtFjHxFXoFhb+
OKH5rrcwZrl3mXFB1uUmUldbm6o5XJMl6sLsWDIms77pby3i80qR86vJ8uZ6
PrHf2L80toin120uJWA5+ebFYo221mQZ+2iduU3qthpEN0q8XMvvmr979+6Q
kJDCwkKHNefMmfPwww9/61vfQjIP8BHQfAB8DVuBGx4e3tXVZadaUVFRZGSk
Xq/funUrNB/4CGg+AL6GNJ8En2Q8IyOjvLycVN1WNRoL9PX1JSQkQPOBjxgv
mi+Xj20v0RGAgCI5OXnatGnCaqysrCxbPj8bFERERPjZQjBJGCeab7GsHoBx
R09PT2RkZFxcHPPhGVRSVFQkqUljAfpq9erVitgJJjzjRPOxNy+YCJDyb9my
ZfHixWLlJ5EXKvT29s6YMYO+ra6udmbOFwBXGR+ar9BGiAD4iMrKyg0bNsTG
xjLZF8rLysro47PPPks/R0VFKWcgmLCMD83n9suSj94bhvxvDgBegZx5UviQ
kBChZO/evVSybt26559/Hn4+8AXjQfMt90u0wLiYSAGLAHAXUvKkpKSTJ0+O
maZrs7KyhG87OzvXr18/e/bs5ORk5WwEE5nxoPlyGz+KtnxU2jwAXKCjoyMl
JWXatGnx8fH0A+k/lShtFJhEjAfNtzmBy94kpYhNAHhCT0/PgQMHjhw5orQh
YNIxDjSf7fcus+sjvzGjEjYBAMC4JPA13/QqcOsJXGg+AAC4RsBrvp0JXP4r
BYwCAIDxScBrvt0VuNzG7343CQAAxisBr/n2V+AaN1T3t0UAADBuCXjNBwAA
4DWg+QAAMHmA5gMAwORhAmj+/wfbIjgY
     "], {{0, 231}, {508, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{331., Automatic},
   ImageSizeRaw->{508, 231},
   PlotRange->{{0, 508}, {0, 231}}]], "Input"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
O/Yt0B37hYoXS8XNA3lDVttDjJe95lV3fNDvnI/MPtvu/a94uyN0x0FlYWGh
FuyVOnv2rGGSRoOqNrXaK6+8kquFVQK6Y38A3QF4oDv2CxUvloqbB/KG9D6G
uoPTKUkET5gM+9c3Oi0q2TRKljRGViwN6he9nelvJuPB21SgrXqjfc0twhZ9
kiV4+FinO6iwV43V3tD+GMt40JsuGJHMT433egO2sd3xWmFHfb7T/yDxCLIx
jOkOoj4iKnDuRY12V1JGbMLdYf/1KFW90dkSeAGjLNCM/ARUcM7AGO9t0XlV
81/mBXmz+RkNrsZ/9atf/dnPfmbxyqA92OQ6o1Kyfi+bWhiKYQbZq0P8g2zo
ogrwKKjSlN/wnYanafWcowgzeKM/a7Y630U1/yizyrMP03bxRqdFbVIN/Fov
Xi/ONndybCwx+46CdOalx+uOacWLHYhRTq19ju5pbAekMN7Nhgw+rvvrlD7c
ptUrdIe4RZDQBGIkwwmXj8sFfG62u28F7dp5BKv2FUKbLRq7c0LL3tm6WGSe
LW0FNqpmFj6ELUDb2lL+uAIo4WpCvbGyqaxe5ECQDNZlTYZba3J/31jxBK2P
DMKDfmtX9gStqcm8UidZZmfhdbqD9auW03fkDJfI+tb6dtwKqCMnjbU+1zqI
DeyfIkfhO5aRLBwZ+5Zkwp3tLhtRgC8B8yxEjG93W+LjQvV2b+T2y9xYXV0l
ix0//OEPDZN89rOfpa09duyY8QvpfiSZbRJWiCKbUrJ/bwKz8SqZx9DqDsE4
gaqZvxtuXRU1e3mrV7ma5kpvZ6Lr9ejy1M3Y70rMC1lurd1KGpkqd1KsLclJ
d0hKb+sDsWtS5NTe56iYjLfXVYojJLXfS/dx07xO4cOtW71Cd4hbhEZ3JNu4
08ed7PRWRHW23lrbGmw56A69r2Bttm/szgktemenYpF5thQV2LyaWfiQ2ZMd
aksFxhVAi6Ab8rWhVE7a6A5Zu2CqQjIWFqU76hfazymeYBWTYTLurzWi50ZT
BzrdMfRa9AstNmLFTYY+MjMZ9r1oFiFazQn/QDQRlymy+sMPCSJHsdxqPxu8
qNle3wrdwmR4ay1qesxbmIRPtjvBUg5Rf+NBj/nulllgrKWd6vSU0EantcS0
evNf5gj9ba9cuaL9/SuvvPLoo4/SqZrN5unTp83eRrwumZUKGA82ycQSrzoz
KSWH9ypQ78/JRHdEVbre6myGFZLu2oStnhRUPfBeYcFM/Bo9m/VietmUO4Wo
3pBxlaPp2+STkylyJ8PRktCcAvZZ1S+0LtStcurgc1TEC9yN9vpswpa2Qby+
7GBDio+b5nUKH+7S6q11h6bMuee7fVxq/0Pr6laYET/NerhUcbbRWLKsxla+
wrmJpfQS2t7ZsVh0usO2Art1LiarVClrS5njCmDA+7322VqS6WpgcmXKfJ+V
PGwU9x6+8lC6Q594pTcy64SY4+SkIeS13kF8r7JpMFIidtexFou1krzrmf2Z
n7yK88v3rWxCaQxkhyyQ4tJPLJj/Mjd+/etfkws4DDdZkWMdhw4dIkVo/EJf
s19otF8XLeWTNuhantm+V0UBuiP8O7etkZo3aHYHTIVUNZNZ/8UkSaU75MOq
8Nlm7c4id1KcLQnNKUB32ObUxeeoIEn4DT/xixIty82GgrNs4MNdWn0WuoPY
zNc6t5zG86J8JedWsgyrsZ2vcG5i2XgJRe/sWiw63WFbgd06F70PcXQFFRhX
AFPoMTlPPIvOoD1XTl/wUaOnm1gtPIXrFJK6g9iQvN/Q8AQcLYLouqo/3xGv
dVqc79CEp5b0evFa0qytke8i8j/UFxCOK2KFyLVBKqFictUpC9HykF6gmf8y
NzqdDvnyTz75pPb3586dO3HiBF0vl5aWMrJFcplC7qXkcIlDIbpD2OHGLuUZ
b0iXB+ngDMNipNEd2tEvNbCRtTu73MlwtyQ0pwjdYZdTN7cph7xI4NijXoaf
uXK0oeAsm/lwGdJWn1p3KEb1bjlVT4zQexgMq7GVr3BuYll4CdWXdS8Wve7I
xjvtKTsXrQ9xdQUVGFcAC8bbXlu6oyleyCPodAezfStZkxlVwnk5VnckZvL5
wL8GfVDiOHmc7VziWZHcyaYuyQ+4Xo+ZBvnfkVYS+594M4OsBMhiDWtG/OkU
M6tuWZAcRVHZZrHDJ2Mee+yxsBgef/xxE91x7733+j8+c+YMqS/Z6Q7d9unc
Ssk+9FARukNiDOlt2bSSei4nhe4gfzBpO2zrdsydjBSWhOnLi2clyamz25Sh
GoSQXLDjKFcbCs6ykQ+Xoxt8uuoOsltY0eNb5VT/xS1bjZWvcG5iWXgJ13Yd
Ii0Wre7IxjtpnqnzIc6uoALjCmAJFxuBgZ++0OgONkyWYDzPDPjZasnoDkEr
4FZS9A6Eip3L+8N8dIdedJM8crMH1EzFk42GdJ1xir4jiJWJVReZJgvxnj1d
BAzzX+bCj3/84/vuuy804I/+6I+0v//ud7/r//Lo0aN0o3j55ZezskfyUXIv
pbnSHeK0ZCLCeG3dfeRs9i7xnKpb7mSksSQ0pzzdIXmCu9uU4KA7XG0oOMsp
IxXnozvi+W3BeQe3nJLzldKuOY9WY/VjQRPL00sEpCgWV93hEjfMXXe4u4KS
xxXAlWl8OVHQQXbWXaM72PG8DjvdwT1c63njMxpJf5iL7mDKRkOyA6VvGKlJ
9lAxb8mjz3LOwmS4uUJvhJPHrzP/ZR7QGWg2m4Y/9nXHYwHhf7pdFziNOOht
yAQ+P9DNrpSs3iuncrrDfgzmPnI2e5ebnXY9expLwgdUTXekc5sqO0TDv8g3
siY621Bwli1Oedu0+lS6gyzWi6aa3XJqMIDPo9VY/VhgQJ5eYkqaYslJd1h2
LpqnpXEF5Y4rQEromEgz6GH5/OgOmzocYnx5Yvo3Clw0e3JfvlxYFd2RtJA/
v1OTnhIy/2XWkPd96UtfWl9fV/zy3Xff9X923333nThx4r/+678efPBBkvYH
P/iB3VvVYaVlHyV9Kbm9V0zVdIf2xhA7G9SWKAZm2ufnoztcLAkfMMe6w3QT
RTSHk9j2Ixu5OdtQcJbNdj1Zt/oUuoNsyNfsCrbKqUE2rVqNna9wbmJ5egnD
3xSoO1w6l+x0h/jYfmnjCpAe+lgEX3uy1B3clH7puiPtba2pFsG5XWTyw2XF
6A7381nJ635k4evNf5kd9Pf+xS9+of7lpz71qXq9fu7cOTrh8ePHX3rpJZt3
0jEK+FsdDaYTnUsp3Xt5qqY7sN6x39Y7MjwTqomjm9AjzjYUnGWDhC6t3ll3
xOUs2fbsllP9GcYDud6Rpliy1h1unYup7kjlCsoYV4AsYI94W+gO9poPu/1L
luc7dA8vXnfYbzgnkLhby63nV6Mo1eJgehbnOyR7CdKt5BoyGmyS2RB1AEzz
X6blRz/6EdkrVVMGwg1/cPToUV9l+P/54osv0usddrojPvImCIxm7GntSymb
98YpzHSHLEDWPtEdZju3szgCICGNJeEDqqY7svM5BG7PKsv0ejV+GOJsQ8FZ
1td5p1bvqjtINZPuCnbMadbnO9x0h20Ty9NLBFTnfIdj56LbtZWlKyhuXAGM
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

     "], {{0, 392}, {1064, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{305., Automatic},
   ImageSizeRaw->{1064, 392},
   PlotRange->{{0, 1064}, {0, 392}}]], "Input"],
 "\n"
}], "Section",
 CellChangeTimes->{{3.700309209643441*^9, 3.70030921373357*^9}, {
  3.700309368487546*^9, 3.7003093795470057`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"M1", "[", "t", "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", " ", 
       RowBox[{"Pg1", ",", "t"}], "]"}], "-", "Fg1"}], "//", "Simplify"}]}], 
   " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M2", "[", "t", "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", " ", 
       RowBox[{"Pg2", ",", "t"}], " ", "]"}], "-", "Fg2"}], "//", 
     "Simplify"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M3", "[", "t", "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", " ", 
       RowBox[{"Pg3", ",", "t"}], " ", "]"}], " ", "-", "Fg3"}], "//", 
     "Simplify"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Mex", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"M3", "[", "t", "]"}], " ", "+", " ", 
      RowBox[{"M1", "[", "t", "]"}]}], " ", "//", "Simplify"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Pex", " ", "=", " ", 
    RowBox[{
     RowBox[{"Pg1", " ", "+", "Pg2"}], " ", "//", "Simplify"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.700309558579729*^9, 3.700309610919561*^9}, {
   3.700309657990954*^9, 3.7003097094961624`*^9}, {3.7004911802186165`*^9, 
   3.7004912227933226`*^9}, {3.7004921353344493`*^9, 
   3.7004921512085533`*^9}, {3.7004927696920996`*^9, 
   3.7004927948788195`*^9}, {3.70049292143983*^9, 3.700492953580495*^9}, {
   3.7004929886465697`*^9, 3.70049300381098*^9}, {3.7005679390815125`*^9, 
   3.7005679478887587`*^9}, {3.700568257204544*^9, 3.7005682582457933`*^9}, {
   3.7007989436689253`*^9, 3.700798967749091*^9}, {3.700799061728962*^9, 
   3.7007990894345593`*^9}, {3.7007993174926825`*^9, 3.700799342355687*^9}, {
   3.70079984502976*^9, 3.7007998543960285`*^9}, {3.700800662132341*^9, 
   3.7008006705003476`*^9}, {3.7008008672669096`*^9, 3.70080087135942*^9}, {
   3.7008222547362375`*^9, 3.700822263755498*^9}, {3.7008223096468153`*^9, 
   3.7008223181340585`*^9}, 3.700822349972982*^9, {3.7008228345379047`*^9, 
   3.7008228399341974`*^9}, {3.700834393036497*^9, 3.700834409619014*^9}, {
   3.7008345420101748`*^9, 3.700834542491213*^9}, {3.7008346768758297`*^9, 
   3.7008347025907187`*^9}, {3.700836243091448*^9, 3.7008362617710223`*^9}, {
   3.700836432236113*^9, 3.7008364409832687`*^9}, 3.7008364814240847`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"3.`", " ", "mc", " ", 
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", 
     RowBox[{"q2", "[", "t", "]"}]}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["q1", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], " ", 
   RowBox[{
    SuperscriptBox["q2", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "-", 
  RowBox[{"1.`", " ", "Ic0", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["q2", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], " ", 
   RowBox[{
    SuperscriptBox["q3", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1.`", " ", "Ic0"}], "+", 
     RowBox[{"1.5`", " ", "mc", " ", 
      SuperscriptBox["r", "2"]}], "-", 
     RowBox[{"1.5`", " ", "mc", " ", 
      SuperscriptBox["r", "2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        RowBox[{"q2", "[", "t", "]"}]}], "]"}]}]}], ")"}], " ", 
   RowBox[{
    SuperscriptBox["q1", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{"1.`", " ", "Ic0", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["q3", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{3.7009995374202924`*^9, 3.7028148649676847`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "1.7320508075688772`"}], " ", "g", " ", "M", " ", "r", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"q2", "[", "t", "]"}], "]"}]}], "-", 
  RowBox[{"1.5`", " ", "mc", " ", 
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", 
     RowBox[{"q2", "[", "t", "]"}]}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["q1", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
  RowBox[{"1.`", " ", "Ic0", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["q1", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], " ", 
   RowBox[{
    SuperscriptBox["q3", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1.`", " ", "Ic0"}], "+", 
     RowBox[{"3.`", " ", "mc", " ", 
      SuperscriptBox["r", "2"]}]}], ")"}], " ", 
   RowBox[{
    SuperscriptBox["q2", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{3.7009995374202924`*^9, 3.702814864997686*^9}],

Cell[BoxData[
 RowBox[{"Ic0", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "1.`"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["q1", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], " ", 
     RowBox[{
      SuperscriptBox["q2", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{"1.`", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["q1", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{"1.`", " ", 
     RowBox[{
      SuperscriptBox["q3", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7009995374202924`*^9, 3.702814865017685*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1.`"}], " ", "Ic0", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"q2", "[", "t", "]"}], "]"}]}], "+", 
     RowBox[{"3.`", " ", "mc", " ", 
      SuperscriptBox["r", "2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", 
        RowBox[{"q2", "[", "t", "]"}]}], "]"}]}]}], ")"}], " ", 
   RowBox[{
    SuperscriptBox["q1", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], " ", 
   RowBox[{
    SuperscriptBox["q2", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "-", 
  RowBox[{"1.`", " ", "Ic0", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["q2", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], " ", 
   RowBox[{
    SuperscriptBox["q3", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{"1.`", " ", "Ic0", " ", 
   RowBox[{
    SuperscriptBox["q1", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{"1.5`", " ", "mc", " ", 
   SuperscriptBox["r", "2"], " ", 
   RowBox[{
    SuperscriptBox["q1", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{"1.`", " ", "Ic0", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["q1", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "-", 
  RowBox[{"1.5`", " ", "mc", " ", 
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", 
     RowBox[{"q2", "[", "t", "]"}]}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["q1", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{"1.`", " ", "Ic0", " ", 
   RowBox[{
    SuperscriptBox["q3", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{"1.`", " ", "Ic0", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["q3", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{3.7009995374202924`*^9, 3.7028148650932713`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1.`", " ", "Ic0"}], "+", 
     RowBox[{"1.5`", " ", "mc", " ", 
      SuperscriptBox["r", "2"]}], "-", 
     RowBox[{"1.5`", " ", "mc", " ", 
      SuperscriptBox["r", "2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        RowBox[{"q2", "[", "t", "]"}]}], "]"}]}]}], ")"}], " ", 
   RowBox[{
    SuperscriptBox["q1", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1.`", " ", "Ic0"}], "+", 
     RowBox[{"3.`", " ", "mc", " ", 
      SuperscriptBox["r", "2"]}]}], ")"}], " ", 
   RowBox[{
    SuperscriptBox["q2", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{"1.`", " ", "Ic0", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["q3", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{3.7009995374202924`*^9, 3.7028148651392717`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.700492171238452*^9, {3.7005683258471184`*^9, 3.7005683262552814`*^9}}],

Cell[CellGroupData[{

Cell["Solve for the highest derivates ", "Subsubsection",
 CellChangeTimes->{{3.7004920176741104`*^9, 3.700492023107629*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"M3", "[", "t", "]"}], "  ", "\[Equal]", 
     RowBox[{
      RowBox[{"D", "[", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[PartialD]", 
          RowBox[{
           SuperscriptBox["q3", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]], "L"}], ",", "t"}], 
       " ", "]"}], "-", 
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"q3", "[", "t", "]"}]], "L"}]}]}], ",", 
    RowBox[{
     SuperscriptBox["q3", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Coefficient", "[", " ", 
  RowBox[{
   RowBox[{"Expand", "[", "Mex", "]"}], " ", ",", "    ", 
   RowBox[{
    RowBox[{
     SuperscriptBox["q1", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "+", " ", 
    RowBox[{
     SuperscriptBox["q2", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.700492025460746*^9, 3.700492125834032*^9, {3.7004921869932656`*^9, 
   3.7004921877572594`*^9}, {3.700492242459675*^9, 3.7004923807917547`*^9}, {
   3.7005681424356766`*^9, 3.7005681898229074`*^9}, {3.700568249424277*^9, 
   3.700568314301935*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7009995378350105`*^9, 3.7028148652195454`*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7009995378350105`*^9, 3.702814865229542*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.700493542761054*^9, 3.7004935436916857`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7004922773078146`*^9, 3.7004922780784082`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Export equations to Matlab
\
\>", "Section",
 CellChangeTimes->{{3.700490492579429*^9, 3.700490497524002*^9}, 
   3.7004909097096553`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"parseForMatlab", "[", "U_", "]"}], ":=", " ", 
    RowBox[{"U", "/.", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"q1", "[", "t", "]"}], "\[Rule]", "q1"}], ",", 
       RowBox[{
        RowBox[{"q2", "[", "t", "]"}], "\[Rule]", "q2"}], ",", 
       RowBox[{
        RowBox[{"q3", "[", "t", "]"}], "\[Rule]", "q3"}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         SuperscriptBox["q1", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Rule]", "q1d"}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["q2", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Rule]", "q2d"}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["q3", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Rule]", "q3d"}], ",", 
       "   ", "\[IndentingNewLine]", " ", 
       RowBox[{
        RowBox[{
         SuperscriptBox["q1", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Rule]", "q1dd"}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["q2", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Rule]", "q2dd"}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["q3", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Rule]", "q3dd"}]}], 
      "}"}]}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Need", " ", "\\\\", " ", "to", " ", 
     RowBox[{"do", " ", "\\\[IndentingNewLine]", 
      RowBox[{"http", ":"}]}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
        "questions"}], "/", "4608"}], "/", "why"}], "-", "does", "-", "the", 
     "-", "front", "-", "end", "-", "group", "-", "backslashes", "-", "into", 
     "-", "pairs"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"parseForTex", "[", "U_", "]"}], ":=", " ", 
    RowBox[{"StringReplace", "[", 
     RowBox[{
      RowBox[{"ToString", "[", "U", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<q1d\>\"", "\[Rule]", "\"\<\\\\dot{q_1}\>\""}], ",", 
        RowBox[{"\"\<q2d\>\"", "\[Rule]", "\"\<\\\\dot{q_2}\>\""}], ",", 
        RowBox[{"\"\<q3d\>\"", "\[Rule]", "\"\<\\\\dot{q_3}\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<q1\>\"", "\[Rule]", "\"\<q_1\>\""}], ",", 
        RowBox[{"\"\<q2\>\"", "\[Rule]", "\"\<q_2\>\""}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<\\\\text\>\"", "\[Rule]", "\"\<\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Ic0\>\"", "\[Rule]", "\"\<I_{c0}\>\""}], ",", " ", 
        RowBox[{"\"\<mc\>\"", " ", "\[Rule]", " ", "\"\<m_c\>\""}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<{q1}'(t)\>\"", "\[Rule]", " ", "\"\<\\\\dot{q_1}\>\""}], 
        " ", ",", 
        RowBox[{"\"\<{q2}'(t)\>\"", "\[Rule]", " ", "\"\<\\\\dot{q_2}\>\""}], 
        " ", ",", 
        RowBox[{"\"\<{q3}'(t)\>\"", "\[Rule]", " ", "\"\<\\\\dot{q_3}\>\""}], 
        "   ", ",", "\[IndentingNewLine]", 
        RowBox[{
        "\"\<{q1}''(t)\>\"", "\[Rule]", " ", "\"\<\\\\ddot{q_1}\>\""}], " ", 
        ",", 
        RowBox[{
        "\"\<{q2}''(t)\>\"", "\[Rule]", " ", "\"\<\\\\ddot{q_2}\>\""}], " ", 
        ",", 
        RowBox[{
        "\"\<{q3}''(t)\>\"", "\[Rule]", " ", "\"\<\\\\ddot{q_3}\>\""}], "   ",
         ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<1.73205\>\"", "\[Rule]", "\"\<\\\\sqrt{3}\>\""}], "  ", 
        ",", 
        RowBox[{"\"\<1.5\>\"", "\[Rule]", "\"\<\\\\frac{3}{2}\>\""}], 
        "        ", ",", 
        RowBox[{"\"\<0.75\>\"", "\[Rule]", " ", "\"\<\\\\frac{3}{4}\>\""}], 
        ",", 
        RowBox[{"\"\<0.5\>\"", "\[Rule]", "\"\<\\\\frac{1}{2}\>\""}], " ", 
        ",", " ", "\[IndentingNewLine]", 
        RowBox[{"\"\<(t)\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], "]"}]}], 
   ";"}], " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQHRWca6Aw6bXjlSQOYxD9y+yXOYg2vZRmAaLPz9B0
BNHhE0N9QDTbQsMgEG3N1RcMoj0j/GNB9AzN22A64ei2SvHJrx0r3rq0gOjT
J6S6QbTW3LZeEM2kO38WiE6/cmkZiJ5W/mMNiFYpXLwJRIvd2LcNRPvd3b0f
REsUhx8B0Ww66y6C6F1hK6+B6KALX2+A6DWCoX9AtIHPmb8gWlbkAbsEkO76
804QRFdX6kuB6OSdF8G09KozqiDah+WbBogWnMmmC6Lf+Z3QA9GMM4MWguiU
x8lLQPS6ST93gehF7fn7QHQm3/zjIPqu+PlTIJr39P1LIPrCltQrIPp+bm+K
JJDe68+XDqJ39Pwy658GNP/+ZisQvWNxgz2IZnlZ5QyiAVgPu/c=
  "]],

Cell[CellGroupData[{

Cell["Import script ", "Subsubsection",
 CellChangeTimes->{{3.70049086443093*^9, 3.700490893580411*^9}}],

Cell["\<\
http://mathematica.stackexchange.com/questions/6013/relative-paths-for-\
portable-notebooks-in-mathematica
\
\>", "Text",
 CellChangeTimes->{{3.700490890457206*^9, 3.7004908992831116`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Import", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<ToMatlab.m\>\""}], 
     "}"}], "]"}], "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7004909162348757`*^9, 3.7004909163924985`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Execute
\
\>", "Subsubsection",
 CellChangeTimes->{{3.700490922749719*^9, 3.7004909339353886`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ToMatlab", "[", 
  RowBox[{"parseForMatlab", "[", 
   RowBox[{"\[Xi]1", "[", "t", "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ToMatlab", "[", " ", 
  RowBox[{"parseForMatlab", "[", 
   RowBox[{"\[Xi]2", "[", "t", "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ToMatlab", "[", 
  RowBox[{"parseForMatlab", "[", 
   RowBox[{"\[Xi]3", "[", "t", "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7004909432299213`*^9, 3.70049097211501*^9}, {
  3.700491526012703*^9, 3.7004915498214035`*^9}}],

Cell[BoxData["\<\"\[Xi]1(t);\\n\"\>"], "Output",
 CellChangeTimes->{3.7009995383254986`*^9, 3.702814865756534*^9}],

Cell[BoxData["\<\"\[Xi]2(t);\\n\"\>"], "Output",
 CellChangeTimes->{3.7009995383254986`*^9, 3.7028148657666426`*^9}],

Cell[BoxData["\<\"\[Xi]3(t);\\n\"\>"], "Output",
 CellChangeTimes->{3.7009995383254986`*^9, 3.702814865776537*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Report ouput
\
\>", "Section",
 CellChangeTimes->{{3.7008364901242857`*^9, 3.700836494836959*^9}, {
  3.7009995453552675`*^9, 3.700999545665037*^9}}],

Cell["\<\
Double check the parsed results always! 

\
\>", "Text",
 CellChangeTimes->{{3.700999551422289*^9, 3.7009995672331305`*^9}, {
  3.7010004200201907`*^9, 3.70100042017445*^9}}],

Cell["Generalized forces", "Subsubsection",
 CellChangeTimes->{{3.701000447958399*^9, 3.701000450776617*^9}}],

Cell[CellGroupData[{

Cell["\<\
Generalized momenta 


\
\>", "Subsubsection",
 CellChangeTimes->{{3.7010004386830444`*^9, 3.701000473989211*^9}}],

Cell[CellGroupData[{

Cell[BoxData["Pg1"], "Input",
 CellChangeTimes->{{3.7010004820636797`*^9, 3.7010004826826105`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1.`", " ", "Ic0"}], "+", 
     RowBox[{"1.5`", " ", "mc", " ", 
      SuperscriptBox["r", "2"]}], "-", 
     RowBox[{"1.5`", " ", "mc", " ", 
      SuperscriptBox["r", "2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        RowBox[{"q2", "[", "t", "]"}]}], "]"}]}]}], ")"}], " ", 
   RowBox[{
    SuperscriptBox["q1", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{"1.`", " ", "Ic0", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["q3", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{3.7010004830211515`*^9, 3.7028148658166227`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXForm", "[", "Pg1", "]"}]], "Input",
 CellChangeTimes->{{3.701000488521468*^9, 3.701000500242427*^9}}],

Cell["\<\
\\text{q1}'(t) \\left(1. \\text{Ic0}-1.5 \\text{mc} r^2 \\cos (2 \
\\text{q2}(t))+1.5 \\text{mc} r^2\\right)+1. \\text{Ic0} \\cos \
(\\text{q2}(t)) \\text{q3}'(t)\
\>", "Output",
 CellChangeTimes->{{3.70100049622841*^9, 3.7010005005925636`*^9}, 
   3.702814866046928*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"parseForTex", "[", 
  RowBox[{"TeXForm", "[", "Pg1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.701000506390814*^9, 3.7010005171742163`*^9}}],

Cell[BoxData["\<\"\\\\dot{q_1} \\\\left(1. {I_{c0}}-\\\\frac{3}{2} {m_c} r^2 \
\\\\cos (2 {q_2})+\\\\frac{3}{2} {m_c} r^2\\\\right)+1. {I_{c0}} \\\\cos \
({q_2}) \\\\dot{q_3}\"\>"], "Output",
 CellChangeTimes->{3.7010005176046343`*^9, 3.702814866116934*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Pg2"], "Input",
 CellChangeTimes->{{3.701000741206046*^9, 3.7010007416582546`*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"0.5`", " ", "Ic0"}], "+", 
    RowBox[{"1.5`", " ", "mc", " ", 
     SuperscriptBox["r", "2"]}]}], ")"}], " ", 
  RowBox[{
   SuperscriptBox["q2", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}]}]], "Output",
 CellChangeTimes->{3.7028148661569357`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"0.5`", " ", "Ic0"}], "+", 
     RowBox[{"1.5`", " ", "mc", " ", 
      SuperscriptBox["r", "2"]}]}], ")"}], " ", 
   RowBox[{
    SuperscriptBox["q2", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[IndentingNewLine]"}]], \
"Input",
 CellChangeTimes->{{3.701000746240306*^9, 3.7010007463368797`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXForm", "[", "Pg2", "]"}]], "Input",
 CellChangeTimes->{{3.7010007489423485`*^9, 3.7010007533232327`*^9}}],

Cell["\<\
2 \\left(0.5 \\text{Ic0}+1.5 \\text{mc} r^2\\right) \\text{q2}'(t)\
\>", "Output",
 CellChangeTimes->{3.701000753687585*^9, 3.7028148662173557`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"parseForTex", "[", 
  RowBox[{"TeXForm", "[", "Pg2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7010007687505703`*^9, 3.701000773777311*^9}}],

Cell[BoxData["\<\"2 \\\\left(0.5 {I_{c0}}+\\\\frac{3}{2} {m_c} r^2\\\\right) \
\\\\dot{q_2}\"\>"], "Output",
 CellChangeTimes->{3.7010007745285487`*^9, 3.7028148662712407`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "Pg3"}]], "Input",
 CellChangeTimes->{{3.701000880030373*^9, 3.7010008835338364`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"1.`", " ", "Ic0", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["q1", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{"1.`", " ", "Ic0", " ", 
   RowBox[{
    SuperscriptBox["q3", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{3.701000884054738*^9, 3.702814866305839*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"parseForTex", "[", 
  RowBox[{"TeXForm", "[", "Pg3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7010008883218727`*^9, 3.701000900063156*^9}}],

Cell[BoxData["\<\"1. {I_{c0}} \\\\dot{q_1} \\\\cos ({q_2})+1. {I_{c0}} \
\\\\dot{q_3}\"\>"], "Output",
 CellChangeTimes->{3.701000900643731*^9, 3.7028148663579645`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Eq of motion ", "Subsubsection",
 CellChangeTimes->{{3.7010004301665626`*^9, 3.7010004320578985`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M1", "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.700836505203399*^9, 3.700836519226366*^9}, {
  3.7008951540501547`*^9, 3.7008953715056677`*^9}, {3.7008959558843117`*^9, 
  3.700895966310918*^9}, {3.700896017405704*^9, 3.70089602434291*^9}, {
  3.7008961670831485`*^9, 3.700896179757936*^9}, {3.7008962193018*^9, 
  3.700896295387824*^9}, {3.7008963315095367`*^9, 3.70089641323952*^9}, {
  3.700896539126641*^9, 3.70089657326297*^9}, {3.700896781037109*^9, 
  3.7008968070082235`*^9}, {3.7009995231667547`*^9, 3.700999527634362*^9}, {
  3.7010011848869953`*^9, 3.701001186639968*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"3.`", " ", "mc", " ", 
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", 
     RowBox[{"q2", "[", "t", "]"}]}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["q1", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], " ", 
   RowBox[{
    SuperscriptBox["q2", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "-", 
  RowBox[{"1.`", " ", "Ic0", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["q2", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], " ", 
   RowBox[{
    SuperscriptBox["q3", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1.`", " ", "Ic0"}], "+", 
     RowBox[{"1.5`", " ", "mc", " ", 
      SuperscriptBox["r", "2"]}], "-", 
     RowBox[{"1.5`", " ", "mc", " ", 
      SuperscriptBox["r", "2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        RowBox[{"q2", "[", "t", "]"}]}], "]"}]}]}], ")"}], " ", 
   RowBox[{
    SuperscriptBox["q1", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{"1.`", " ", "Ic0", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["q3", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{3.7028148663879647`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"parseForTex", "[", 
  RowBox[{"TeXForm", "[", 
   RowBox[{"M1", "[", "t", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7010012043855333`*^9, 3.7010012168226633`*^9}}],

Cell[BoxData["\<\"\\\\ddot{q_1} \\\\left(1. {I_{c0}}-\\\\frac{3}{2} {m_c} r^2 \
\\\\cos (2 {q_2})+\\\\frac{3}{2} {m_c} r^2\\\\right)-1. {I_{c0}} \\\\dot{q_2} \
\\\\sin ({q_2}) \\\\dot{q_3}+1. {I_{c0}} \\\\cos ({q_2}) \\\\ddot{q_3}+3. \
{m_c} r^2 \\\\dot{q_1} \\\\dot{q_2} \\\\sin (2 {q_2})\"\>"], "Output",
 CellChangeTimes->{3.7010012173334484`*^9, 3.702814866898567*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"M2", "[", "t", "]"}], "\[IndentingNewLine]", 
 RowBox[{"TeXForm", "[", 
  RowBox[{"M2", "[", "t", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"parseForTex", "[", 
  RowBox[{"TeXForm", "[", 
   RowBox[{"M2", "[", "t", "]"}], "]"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.700836505203399*^9, 3.700836519226366*^9}, {
  3.7009995699069214`*^9, 3.7009995937656345`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "1.7320508075688772`"}], " ", "g", " ", "M", " ", "r", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"q2", "[", "t", "]"}], "]"}]}], "-", 
  RowBox[{"1.5`", " ", "mc", " ", 
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", 
     RowBox[{"q2", "[", "t", "]"}]}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["q1", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
  RowBox[{"1.`", " ", "Ic0", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["q1", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], " ", 
   RowBox[{
    SuperscriptBox["q3", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1.`", " ", "Ic0"}], "+", 
     RowBox[{"3.`", " ", "mc", " ", 
      SuperscriptBox["r", "2"]}]}], ")"}], " ", 
   RowBox[{
    SuperscriptBox["q2", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.700999532380468*^9, 3.700999538425043*^9}, {
   3.700999576473172*^9, 3.7009995948663683`*^9}, 3.7009996750542912`*^9, 
   3.701001038447319*^9, 3.702814866939928*^9}],

Cell[BoxData["\<\"-\\\\sqrt{3} g M r \\\\sin ({q_2})+\\\\left(1. {I_{c0}}+3. \
{m_c} r^2\\\\right) \\\\ddot{q_2}+1. {I_{c0}} \\\\dot{q_1} \\\\sin ({q_2}) \\\
\\dot{q_3}-\\\\frac{3}{2} {m_c} r^2 \\\\dot{q_1}^2 \\\\sin (2 {q_2})\"\>"], \
"Output",
 CellChangeTimes->{{3.700999532380468*^9, 3.700999538425043*^9}, {
   3.700999576473172*^9, 3.7009995948663683`*^9}, 3.7009996750542912`*^9, 
   3.701001038447319*^9, 3.7028148670563684`*^9}],

Cell["\<\
-1.73205 g M r \\sin (\\text{q2}(t))+\\left(1. \\text{Ic0}+3. \\text{mc} \
r^2\\right) \\text{q2}''(t)+1. \\text{Ic0} \\text{q1}'(t) \\sin (\\text{q2}(t))
   \\text{q3}'(t)-1.5 \\text{mc} r^2 \\text{q1}'(t)^2 \\sin (2 \\text{q2}(t))\
\>", "Output",
 CellChangeTimes->{{3.700999532380468*^9, 3.700999538425043*^9}, {
   3.700999576473172*^9, 3.7009995948663683`*^9}, 3.7009996750542912`*^9, 
   3.701001038447319*^9, 3.7028148670653677`*^9}]
}, Open  ]],

Cell["", "Input",
 CellChangeTimes->{{3.700895131067498*^9, 3.700895131067498*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M3", "[", "t", "]"}]], "Input",
 CellChangeTimes->{
  3.700836505203399*^9, {3.7010014126955767`*^9, 3.7010014147573853`*^9}}],

Cell[BoxData[
 RowBox[{"Ic0", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "1.`"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["q1", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], " ", 
     RowBox[{
      SuperscriptBox["q2", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{"1.`", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["q1", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{"1.`", " ", 
     RowBox[{
      SuperscriptBox["q3", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.701001415013525*^9, 3.702814867123369*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"parseForTex", "[", 
  RowBox[{"TeXForm", "[", 
   RowBox[{"M3", "[", "t", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7010013917203903`*^9, 3.7010014028506374`*^9}}],

Cell[BoxData["\<\"{I_{c0}} \\\\left(1. \\\\ddot{q_1} \\\\cos ({q_2})-1. \
\\\\dot{q_1} \\\\dot{q_2} \\\\sin ({q_2})+1. \\\\ddot{q_3}\\\\right)\"\>"], \
"Output",
 CellChangeTimes->{3.700999538495158*^9, 3.7010014039044704`*^9, 
  3.702814867184373*^9}]
}, Open  ]],

Cell["", "Input",
 CellChangeTimes->{{3.7008951334877324`*^9, 3.7008951334977913`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{"Fg2", "\[IndentingNewLine]", 
 RowBox[{"TeXForm", "[", " ", "Fg2", "]"}], "\[IndentingNewLine]", 
 RowBox[{"parseForTex", "[", 
  RowBox[{"TeXForm", "[", "Fg2", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7009968129137135`*^9, 3.7009968504116488`*^9}, {
   3.700996938047135*^9, 3.700996963555146*^9}, {3.7009971660108957`*^9, 
   3.700997180639159*^9}, {3.7009972632006016`*^9, 3.700997301607483*^9}, 
   3.7009974452685823`*^9, {3.700997874745892*^9, 3.7009978768090506`*^9}, {
   3.7009980255363283`*^9, 3.700998079674832*^9}, {3.7009984152034035`*^9, 
   3.70099842172838*^9}, {3.7009996883107686`*^9, 3.7009996990729527`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"1.7320508075688772`", " ", "g", " ", "M", " ", "r", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"q2", "[", "t", "]"}], "]"}]}], "+", 
  RowBox[{"1.5`", " ", "mc", " ", 
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", 
     RowBox[{"q2", "[", "t", "]"}]}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["q1", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
  RowBox[{"1.`", " ", "Ic0", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["q1", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], " ", 
   RowBox[{
    SuperscriptBox["q3", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.700999538525689*^9, {3.700999689712803*^9, 3.7009996998148985`*^9}, 
   3.702814867255375*^9}],

Cell[BoxData["\<\"\\\\sqrt{3} g M r \\\\sin ({q_2})-1. {I_{c0}} \\\\dot{q_1} \
\\\\sin ({q_2}) \\\\dot{q_3}+\\\\frac{3}{2} {m_c} r^2 \\\\dot{q_1}^2 \\\\sin \
(2 {q_2})\"\>"], "Output",
 CellChangeTimes->{
  3.700999538525689*^9, {3.700999689712803*^9, 3.7009996998148985`*^9}, 
   3.7028148673233767`*^9}],

Cell["\<\
1.73205 g M r \\sin (\\text{q2}(t))-1. \\text{Ic0} \\text{q1}'(t) \\sin \
(\\text{q2}(t)) \\text{q3}'(t)+1.5 \\text{mc} r^2 \\text{q1}'(t)^2 \\sin (2 \
\\text{q2}(t))\
\>", "Output",
 CellChangeTimes->{
  3.700999538525689*^9, {3.700999689712803*^9, 3.7009996998148985`*^9}, 
   3.7028148673293777`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"parseForTex", "[", 
   RowBox[{"TeXForm", "[", "Fg2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7009968129137135`*^9, 3.7009968504116488`*^9}, {
   3.700996938047135*^9, 3.700996963555146*^9}, {3.7009971660108957`*^9, 
   3.700997180639159*^9}, {3.7009972632006016`*^9, 3.700997301607483*^9}, 
   3.7009974452685823`*^9, {3.700997874745892*^9, 3.7009978768090506`*^9}, {
   3.7009980255363283`*^9, 3.700998079674832*^9}, {3.700998308699338*^9, 
   3.700998337766988*^9}, {3.700999510555939*^9, 3.700999512952711*^9}}],

Cell[BoxData["\<\"\\\\sqrt{3} g M r \\\\sin ({q_2})-1. {I_{c0}} \\\\dot{q_1} \
\\\\sin ({q_2}) \\\\dot{q_3}+\\\\frac{3}{2} {m_c} r^2 \\\\dot{q_1}^2 \\\\sin \
(2 {q_2})\"\>"], "Output",
 CellChangeTimes->{3.700999538936494*^9, 3.700999774744278*^9, 
  3.7009998474141307`*^9, 3.7028148673913803`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"parseForTex", "[", 
  RowBox[{"TeXForm", "[", "L", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.70281502115014*^9, 3.702815042953817*^9}}],

Cell[BoxData["\<\"-\\\\sqrt{3} g M r \\\\cos ({q_2})+\\\\dot{q_1}^2 \\\\left(\
\\\\frac{1}{2} {I_{c0}}-\\\\frac{3}{4} {m_c} r^2 \\\\cos (2 \
{q_2})+\\\\frac{3}{4} {m_c} r^2\\\\right)+\\\\left(\\\\frac{1}{2} {I_{c0}}+\\\
\\frac{3}{2} {m_c} r^2\\\\right) \\\\dot{q_2}^2+1. {I_{c0}} \\\\dot{q_1} \
\\\\cos ({q_2}) \\\\dot{q_3}+\\\\frac{1}{2} {I_{c0}} \\\\dot{q_3}^2\"\>"], \
"Output",
 CellChangeTimes->{{3.702815035273844*^9, 3.7028150433796453`*^9}, 
   3.7028151960798006`*^9, {3.7028152388006306`*^9, 3.702815265540412*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1362, 685},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (December 4, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 94, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[677, 25, 492, 9, 166, "Title"],
Cell[CellGroupData[{
Cell[1194, 38, 17207, 286, 497, "Input"],
Cell[18404, 326, 17252, 287, 497, "Output"]
}, Open  ]],
Cell[35671, 616, 370, 11, 106, "Text"],
Cell[CellGroupData[{
Cell[36066, 631, 166, 2, 70, "Section"],
Cell[36235, 635, 1195, 27, 284, "Text"],
Cell[37433, 664, 321, 4, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37791, 673, 144, 2, 70, "Section"],
Cell[37938, 677, 347, 6, 49, "Text"],
Cell[38288, 685, 94, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[38407, 690, 2135, 60, 252, "Input"],
Cell[40545, 752, 1067, 37, 133, "Output"],
Cell[41615, 791, 1067, 37, 133, "Output"],
Cell[42685, 830, 681, 19, 71, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[43415, 855, 366, 8, 111, "Section"],
Cell[CellGroupData[{
Cell[43806, 867, 121, 2, 49, "Subsection"],
Cell[43930, 871, 349, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[44304, 881, 5028, 117, 475, "Input"],
Cell[49335, 1000, 185, 5, 36, "Output"],
Cell[49523, 1007, 667, 19, 33, "Output"],
Cell[50193, 1028, 687, 19, 71, "Output"],
Cell[50883, 1049, 119, 2, 31, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51063, 1058, 179, 2, 70, "Section"],
Cell[51245, 1062, 1195, 27, 277, "Text"],
Cell[CellGroupData[{
Cell[52465, 1093, 115, 1, 39, "Subsubsection"],
Cell[52583, 1096, 269, 5, 30, "Text"],
Cell[52855, 1103, 96, 1, 31, "Input"],
Cell[52954, 1106, 3011, 55, 172, "Input"],
Cell[55968, 1163, 2823, 46, 92, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58828, 1214, 55871, 922, 396, "Subsubsection"],
Cell[CellGroupData[{
Cell[114724, 2140, 3257, 64, 152, "Input"],
Cell[117984, 2206, 613, 18, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118634, 2229, 3405, 89, 272, "Input"],
Cell[122042, 2320, 1448, 44, 31, "Output"],
Cell[123493, 2366, 178, 4, 31, "Output"]
}, Open  ]],
Cell[123686, 2373, 89, 2, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123812, 2380, 99, 1, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[123936, 2385, 3270, 63, 172, "Input"],
Cell[127209, 2450, 542, 16, 31, "Output"],
Cell[127754, 2468, 544, 16, 31, "Output"],
Cell[128301, 2486, 384, 11, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128722, 2502, 456, 13, 72, "Input"],
Cell[129181, 2517, 386, 11, 31, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[129628, 2535, 151, 5, 111, "Section"],
Cell[129782, 2542, 659, 9, 52, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130478, 2556, 96, 1, 70, "Section"],
Cell[130577, 2559, 764, 15, 163, "Text"],
Cell[CellGroupData[{
Cell[131366, 2578, 1977, 41, 192, "Input"],
Cell[133346, 2621, 1424, 43, 33, "Output"],
Cell[134773, 2666, 336, 10, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135146, 2681, 120, 4, 67, "Subsubsection"],
Cell[135269, 2687, 216, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[135510, 2696, 595, 16, 72, "Input"],
Cell[136108, 2714, 90, 1, 31, "Output"],
Cell[136201, 2717, 852, 23, 31, "Output"],
Cell[137056, 2742, 91, 1, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[137196, 2749, 237, 6, 95, "Subsubsection"],
Cell[CellGroupData[{
Cell[137458, 2759, 826, 25, 77, "Input"],
Cell[138287, 2786, 768, 22, 33, "Output"],
Cell[139058, 2810, 361, 10, 33, "Output"],
Cell[139422, 2822, 450, 12, 31, "Output"]
}, Open  ]],
Cell[139887, 2837, 91, 2, 31, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[140027, 2845, 64170, 1065, 262, "Section"],
Cell[CellGroupData[{
Cell[204222, 3914, 2386, 51, 192, "Input"],
Cell[206611, 3967, 1474, 42, 33, "Output"],
Cell[208088, 4011, 1154, 33, 33, "Output"],
Cell[209245, 4046, 851, 24, 31, "Output"],
Cell[210099, 4072, 2195, 62, 54, "Output"],
Cell[212297, 4136, 1040, 31, 33, "Output"]
}, Open  ]],
Cell[213352, 4170, 121, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[213498, 4176, 125, 1, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[213648, 4181, 1350, 37, 94, "Input"],
Cell[215001, 4220, 136, 3, 31, "Output"],
Cell[215140, 4225, 94, 1, 31, "Output"]
}, Open  ]],
Cell[215249, 4229, 94, 1, 31, "Input"],
Cell[215346, 4232, 96, 1, 31, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[215491, 4239, 148, 5, 111, "Section"],
Cell[215642, 4246, 4630, 108, 332, "Input"],
Cell[CellGroupData[{
Cell[220297, 4358, 104, 1, 39, "Subsubsection"],
Cell[220404, 4361, 199, 5, 49, "Text"],
Cell[220606, 4368, 348, 9, 72, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220991, 4382, 109, 4, 67, "Subsubsection"],
Cell[CellGroupData[{
Cell[221125, 4390, 535, 11, 72, "Input"],
Cell[221663, 4403, 114, 1, 52, "Output"],
Cell[221780, 4406, 116, 1, 52, "Output"],
Cell[221899, 4409, 114, 1, 52, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[222074, 4417, 159, 5, 111, "Section"],
Cell[222236, 4424, 184, 6, 68, "Text"],
Cell[222423, 4432, 109, 1, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[222557, 4437, 124, 6, 117, "Subsubsection"],
Cell[CellGroupData[{
Cell[222706, 4447, 99, 1, 31, "Input"],
Cell[222808, 4450, 768, 22, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223613, 4477, 128, 2, 31, "Input"],
Cell[223744, 4481, 281, 6, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224062, 4492, 168, 3, 31, "Input"],
Cell[224233, 4497, 257, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224527, 4505, 97, 1, 31, "Input"],
Cell[224627, 4508, 337, 10, 33, "Output"]
}, Open  ]],
Cell[224979, 4521, 406, 12, 54, "Input"],
Cell[CellGroupData[{
Cell[225410, 4537, 132, 2, 31, "Input"],
Cell[225545, 4541, 158, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225740, 4549, 168, 3, 31, "Input"],
Cell[225911, 4554, 176, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226124, 4561, 132, 2, 52, "Input"],
Cell[226259, 4565, 446, 12, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226742, 4582, 168, 3, 31, "Input"],
Cell[226913, 4587, 168, 2, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[227130, 4595, 108, 1, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[227263, 4600, 613, 9, 31, "Input"],
Cell[227879, 4611, 1450, 42, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229366, 4658, 198, 4, 31, "Input"],
Cell[229567, 4664, 372, 4, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229976, 4673, 421, 9, 92, "Input"],
Cell[230400, 4684, 1278, 35, 33, "Output"],
Cell[231681, 4721, 437, 6, 52, "Output"],
Cell[232121, 4729, 450, 7, 48, "Output"]
}, Open  ]],
Cell[232586, 4739, 83, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[232694, 4744, 150, 3, 31, "Input"],
Cell[232847, 4749, 849, 24, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233733, 4778, 198, 4, 31, "Input"],
Cell[233934, 4784, 252, 4, 31, "Output"]
}, Open  ]],
Cell[234201, 4791, 87, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[234313, 4796, 649, 9, 72, "Input"],
Cell[234965, 4807, 908, 25, 31, "Output"],
Cell[235876, 4834, 305, 5, 31, "Output"],
Cell[236184, 4841, 313, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236534, 4853, 581, 9, 52, "Input"],
Cell[237118, 4864, 299, 4, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237454, 4873, 163, 3, 31, "Input"],
Cell[237620, 4878, 525, 7, 52, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
